diff -Npru stock-framework/smali/android/privacy/surrogate/PrivacyCursor.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyCursor.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyCursor.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyCursor.smali	2012-10-22 10:39:42.520543798 -0500
@@ -0,0 +1,1589 @@
+.class public Landroid/privacy/surrogate/PrivacyCursor;
+.super Ljava/lang/Object;
+.source "PrivacyCursor.java"
+
+# interfaces
+.implements Landroid/database/Cursor;
+
+
+# static fields
+.field private static final TAG:Ljava/lang/String; = "PrivacyCursor"
+
+
+# instance fields
+.field private allowedIdMapping:[I
+
+.field private allowedIds:[I
+
+.field private realCursor:Landroid/database/Cursor;
+
+
+# direct methods
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/database/Cursor;[I)V
+    .registers 7
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    if-eqz p2, :cond_8
+
+    array-length v2, p2
+
+    if-nez v2, :cond_3a
+
+    :cond_8
+    const/4 v2, 0x0
+
+    :goto_9
+    iput-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iput-object p2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIds:[I
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v2, :cond_41
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    array-length v2, p2
+
+    new-array v2, v2, [I
+
+    iput-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    const/4 v1, 0x0
+
+    :cond_1d
+    :goto_1d
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_3c
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v2}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1d
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v3
+
+    aput v3, v2, v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_1d
+
+    :cond_3a
+    move-object v2, p1
+
+    goto :goto_9
+
+    :cond_3c
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v2, v0}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    :cond_41
+    return-void
+.end method
+
+.method private getContactId(Landroid/database/Cursor;)I
+    .registers 5
+
+    const-string v2, "_id"
+
+    invoke-interface {p1, v2}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    const/4 v1, -0x1
+
+    const/4 v2, -0x1
+
+    if-eq v0, v2, :cond_e
+
+    invoke-interface {p1, v0}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v1
+
+    :cond_e
+    return v1
+.end method
+
+.method private getMappedPos(I)I
+    .registers 4
+
+    const/4 v0, 0x0
+
+    :goto_1
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v1, v1
+
+    if-ge v0, v1, :cond_11
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v1, v1, v0
+
+    if-ne v1, p1, :cond_e
+
+    move v1, v0
+
+    :goto_d
+    return v1
+
+    :cond_e
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_1
+
+    :cond_11
+    const/4 v1, -0x1
+
+    goto :goto_d
+.end method
+
+.method private isAllowed(I)Z
+    .registers 7
+
+    const/4 v4, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIds:[I
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_5
+    if-ge v2, v3, :cond_c
+
+    aget v1, v0, v2
+
+    if-ne p1, v1, :cond_d
+
+    const/4 v4, 0x1
+
+    :cond_c
+    return v4
+
+    :cond_d
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_5
+.end method
+
+.method private isAllowed(Landroid/database/Cursor;)Z
+    .registers 3
+
+    invoke-direct {p0, p1}, Landroid/privacy/surrogate/PrivacyCursor;->getContactId(Landroid/database/Cursor;)I
+
+    move-result v0
+
+    invoke-direct {p0, v0}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(I)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+
+# virtual methods
+.method public abortUpdates()V
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->abortUpdates()V
+
+    :cond_9
+    return-void
+.end method
+
+.method public close()V
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_9
+    return-void
+.end method
+
+.method public commitUpdates()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->commitUpdates()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public commitUpdates(Ljava/util/Map;)Z
+    .registers 3
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/Map",
+            "<+",
+            "Ljava/lang/Long;",
+            "+",
+            "Ljava/util/Map",
+            "<",
+            "Ljava/lang/String;",
+            "Ljava/lang/Object;",
+            ">;>;)Z"
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->commitUpdates(Ljava/util/Map;)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public copyStringToBuffer(ILandroid/database/CharArrayBuffer;)V
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->copyStringToBuffer(ILandroid/database/CharArrayBuffer;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public deactivate()V
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->deactivate()V
+
+    :cond_9
+    return-void
+.end method
+
+.method public deleteRow()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->deleteRow()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getBlob(I)[B
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getBlob(I)[B
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    new-array v0, v0, [B
+
+    goto :goto_a
+.end method
+
+.method public getColumnCount()I
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getColumnCount()I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getColumnIndex(Ljava/lang/String;)I
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, -0x1
+
+    goto :goto_a
+.end method
+
+.method public getColumnIndexOrThrow(Ljava/lang/String;)I
+    .registers 3
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/IllegalArgumentException;
+        }
+    .end annotation
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnIndexOrThrow(Ljava/lang/String;)I
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, -0x1
+
+    goto :goto_a
+.end method
+
+.method public getColumnName(I)Ljava/lang/String;
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getColumnName(I)Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const-string v0, ""
+
+    goto :goto_a
+.end method
+
+.method public getColumnNames()[Ljava/lang/String;
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getColumnNames()[Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const/4 v0, 0x1
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    const-string v2, ""
+
+    aput-object v2, v0, v1
+
+    goto :goto_a
+.end method
+
+.method public getCount()I
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_23
+
+    const-string v0, "PrivacyCursor"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "getCount: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v2, v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v0, v0
+
+    :goto_22
+    return v0
+
+    :cond_23
+    const/4 v0, 0x0
+
+    goto :goto_22
+.end method
+
+.method public getDouble(I)D
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getDouble(I)D
+
+    move-result-wide v0
+
+    :goto_a
+    return-wide v0
+
+    :cond_b
+    const-wide/16 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getExtras()Landroid/os/Bundle;
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    goto :goto_a
+.end method
+
+.method public getFloat(I)F
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getFloat(I)F
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getInt(I)I
+    .registers 4
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_c
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1, p1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v0
+
+    move v1, v0
+
+    :goto_b
+    return v1
+
+    :cond_c
+    const/4 v1, 0x0
+
+    goto :goto_b
+.end method
+
+.method public getLong(I)J
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getLong(I)J
+
+    move-result-wide v0
+
+    :goto_a
+    return-wide v0
+
+    :cond_b
+    const-wide/16 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getPosition()I
+    .registers 5
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_38
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v1
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->getMappedPos(I)I
+
+    move-result v0
+
+    const-string v1, "PrivacyCursor"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getPosition - mapped position: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " real position: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v3
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v1, v0
+
+    :goto_37
+    return v1
+
+    :cond_38
+    const/4 v1, -0x1
+
+    goto :goto_37
+.end method
+
+.method public getShort(I)S
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public getString(I)Ljava/lang/String;
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const-string v0, ""
+
+    goto :goto_a
+.end method
+
+.method public getWantsAllOnMoveCalls()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getWantsAllOnMoveCalls()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public hasUpdates()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->hasUpdates()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isAfterLast()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isAfterLast()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isBeforeFirst()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isBeforeFirst()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isClosed()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->isClosed()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public isFirst()Z
+    .registers 4
+
+    const/4 v2, 0x0
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_13
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v1, v1, v2
+
+    if-ne v0, v1, :cond_13
+
+    const/4 v0, 0x1
+
+    :goto_12
+    return v0
+
+    :cond_13
+    move v0, v2
+
+    goto :goto_12
+.end method
+
+.method public isLast()Z
+    .registers 5
+
+    const/4 v3, 0x1
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_17
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v2, v2
+
+    sub-int/2addr v2, v3
+
+    aget v1, v1, v2
+
+    if-ne v0, v1, :cond_17
+
+    move v0, v3
+
+    :goto_16
+    return v0
+
+    :cond_17
+    const/4 v0, 0x0
+
+    goto :goto_16
+.end method
+
+.method public isNull(I)Z
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->isNull(I)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public move(I)Z
+    .registers 9
+
+    const/4 v6, 0x0
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v3, :cond_38
+
+    const-string v3, "PrivacyCursor"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "move - offset: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    :try_start_1d
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v4, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v4}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v4
+
+    invoke-direct {p0, v4}, Landroid/privacy/surrogate/PrivacyCursor;->getMappedPos(I)I
+
+    move-result v4
+
+    add-int/2addr v4, p1
+
+    aget v1, v3, v4
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v3, v1}, Landroid/database/Cursor;->moveToPosition(I)Z
+    :try_end_31
+    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_1d .. :try_end_31} :catch_34
+
+    move-result v2
+
+    move v3, v2
+
+    :goto_33
+    return v3
+
+    :catch_34
+    move-exception v3
+
+    move-object v0, v3
+
+    move v3, v6
+
+    goto :goto_33
+
+    :cond_38
+    move v3, v6
+
+    goto :goto_33
+.end method
+
+.method public moveToFirst()Z
+    .registers 5
+
+    const/4 v3, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_11
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v2, v2, v3
+
+    invoke-interface {v1, v2}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    move-result v0
+
+    move v1, v0
+
+    :goto_10
+    return v1
+
+    :cond_11
+    move v1, v3
+
+    goto :goto_10
+.end method
+
+.method public moveToLast()Z
+    .registers 6
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_15
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    array-length v3, v3
+
+    const/4 v4, 0x1
+
+    sub-int/2addr v3, v4
+
+    aget v2, v2, v3
+
+    invoke-interface {v1, v2}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    move-result v0
+
+    move v1, v0
+
+    :goto_14
+    return v1
+
+    :cond_15
+    const/4 v1, 0x0
+
+    goto :goto_14
+.end method
+
+.method public moveToNext()Z
+    .registers 4
+
+    const/4 v2, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_24
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v1
+
+    if-nez v1, :cond_f
+
+    move v1, v2
+
+    :goto_e
+    return v1
+
+    :cond_f
+    const/4 v0, 0x1
+
+    :goto_10
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_22
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_22
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v0
+
+    goto :goto_10
+
+    :cond_22
+    move v1, v0
+
+    goto :goto_e
+
+    :cond_24
+    move v1, v2
+
+    goto :goto_e
+.end method
+
+.method public moveToPosition(I)Z
+    .registers 7
+
+    const/4 v4, 0x0
+
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v2, :cond_15
+
+    :try_start_5
+    iget-object v2, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    iget-object v3, p0, Landroid/privacy/surrogate/PrivacyCursor;->allowedIdMapping:[I
+
+    aget v3, v3, p1
+
+    invoke-interface {v2, v3}, Landroid/database/Cursor;->moveToPosition(I)Z
+    :try_end_e
+    .catch Ljava/lang/ArrayIndexOutOfBoundsException; {:try_start_5 .. :try_end_e} :catch_11
+
+    move-result v1
+
+    move v2, v1
+
+    :goto_10
+    return v2
+
+    :catch_11
+    move-exception v2
+
+    move-object v0, v2
+
+    move v2, v4
+
+    goto :goto_10
+
+    :cond_15
+    move v2, v4
+
+    goto :goto_10
+.end method
+
+.method public moveToPrevious()Z
+    .registers 4
+
+    const/4 v2, 0x0
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v1, :cond_24
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToPrevious()Z
+
+    move-result v1
+
+    if-nez v1, :cond_f
+
+    move v1, v2
+
+    :goto_e
+    return v1
+
+    :cond_f
+    const/4 v0, 0x1
+
+    :goto_10
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_22
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-direct {p0, v1}, Landroid/privacy/surrogate/PrivacyCursor;->isAllowed(Landroid/database/Cursor;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_22
+
+    iget-object v1, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v1}, Landroid/database/Cursor;->moveToPrevious()Z
+
+    move-result v0
+
+    goto :goto_10
+
+    :cond_22
+    move v1, v0
+
+    goto :goto_e
+
+    :cond_24
+    move v1, v2
+
+    goto :goto_e
+.end method
+
+.method public registerContentObserver(Landroid/database/ContentObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->registerContentObserver(Landroid/database/ContentObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public registerDataSetObserver(Landroid/database/DataSetObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->registerDataSetObserver(Landroid/database/DataSetObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public requery()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->requery()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public respond(Landroid/os/Bundle;)Landroid/os/Bundle;
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->respond(Landroid/os/Bundle;)Landroid/os/Bundle;
+
+    move-result-object v0
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    new-instance v0, Landroid/os/Bundle;
+
+    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V
+
+    goto :goto_a
+.end method
+
+.method public setNotificationUri(Landroid/content/ContentResolver;Landroid/net/Uri;)V
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->setNotificationUri(Landroid/content/ContentResolver;Landroid/net/Uri;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public supportsUpdates()Z
+    .registers 2
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0}, Landroid/database/Cursor;->supportsUpdates()Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public unregisterContentObserver(Landroid/database/ContentObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->unregisterContentObserver(Landroid/database/ContentObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public unregisterDataSetObserver(Landroid/database/DataSetObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_9
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->unregisterDataSetObserver(Landroid/database/DataSetObserver;)V
+
+    :cond_9
+    return-void
+.end method
+
+.method public updateBlob(I[B)Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->updateBlob(I[B)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateDouble(ID)Z
+    .registers 5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2, p3}, Landroid/database/Cursor;->updateDouble(ID)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateFloat(IF)Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->updateFloat(IF)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateInt(II)Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->updateInt(II)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateLong(IJ)Z
+    .registers 5
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2, p3}, Landroid/database/Cursor;->updateLong(IJ)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateShort(IS)Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->updateShort(IS)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateString(ILjava/lang/String;)Z
+    .registers 4
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1, p2}, Landroid/database/Cursor;->updateString(ILjava/lang/String;)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method public updateToNull(I)Z
+    .registers 3
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    if-eqz v0, :cond_b
+
+    iget-object v0, p0, Landroid/privacy/surrogate/PrivacyCursor;->realCursor:Landroid/database/Cursor;
+
+    invoke-interface {v0, p1}, Landroid/database/Cursor;->updateToNull(I)Z
+
+    move-result v0
+
+    :goto_a
+    return v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
