diff -Npru stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali pdroid-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali
--- stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	1969-12-31 18:00:00.000000000 -0600
+++ pdroid-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	2012-10-22 10:39:42.512543750 -0500
@@ -0,0 +1,5019 @@
+.class public Landroid/privacy/PrivacyPersistenceAdapter;
+.super Ljava/lang/Object;
+.source "PrivacyPersistenceAdapter.java"
+
+
+# static fields
+.field private static final CREATE_TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+.field private static final CREATE_TABLE_MAP:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+.field private static final CREATE_TABLE_SETTINGS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER);"
+
+.field private static final DATABASE_FIELDS:[Ljava/lang/String; = null
+
+.field private static final DATABASE_FILE:Ljava/lang/String; = "/data/system/privacy.db"
+
+.field private static final DATABASE_VERSION:I = 0x3
+
+.field public static final DUMMY_UID:I = -0x1
+
+.field private static final INSERT_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+.field private static final INSERT_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+.field private static final INSERT_VERSION:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 3);"
+
+.field private static final RETRY_QUERY_COUNT:I = 0x5
+
+.field public static final SETTINGS_DIRECTORY:Ljava/lang/String; = "/data/system/privacy"
+
+.field public static final SETTING_DB_VERSION:Ljava/lang/String; = "db_version"
+
+.field public static final SETTING_ENABLED:Ljava/lang/String; = "enabled"
+
+.field public static final SETTING_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "notifications_enabled"
+
+.field private static final TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "allowed_contacts"
+
+.field private static final TABLE_MAP:Ljava/lang/String; = "map"
+
+.field private static final TABLE_SETTINGS:Ljava/lang/String; = "settings"
+
+.field private static final TABLE_VERSION:Ljava/lang/String; = "version"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyPersistenceAdapter"
+
+.field public static final VALUE_FALSE:Ljava/lang/String; = "0"
+
+.field public static final VALUE_TRUE:Ljava/lang/String; = "1"
+
+.field public static readingThreads:Ljava/lang/Integer;
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private db:Landroid/database/sqlite/SQLiteDatabase;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/4 v2, 0x0
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    const/16 v0, 0x23
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const-string v1, "_id"
+
+    aput-object v1, v0, v2
+
+    const/4 v1, 0x1
+
+    const-string v2, "packageName"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string/jumbo v2, "uid"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "deviceIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "deviceId"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "line1NumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "line1Number"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "locationGpsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "locationGpsLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "locationGpsLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "locationNetworkSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "locationNetworkLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xc
+
+    const-string v2, "locationNetworkLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xd
+
+    const-string v2, "networkInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xe
+
+    const-string v2, "simInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xf
+
+    const-string v2, "simSerialNumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x10
+
+    const-string v2, "simSerialNumber"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x11
+
+    const-string/jumbo v2, "subscriberIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x12
+
+    const-string/jumbo v2, "subscriberId"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x13
+
+    const-string v2, "accountsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x14
+
+    const-string v2, "accountsAuthTokensSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x15
+
+    const-string v2, "outgoingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x16
+
+    const-string v2, "incomingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x17
+
+    const-string v2, "contactsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x18
+
+    const-string v2, "calendarSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x19
+
+    const-string v2, "mmsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1a
+
+    const-string v2, "smsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1b
+
+    const-string v2, "callLogSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1c
+
+    const-string v2, "bookmarksSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1d
+
+    const-string/jumbo v2, "systemLogsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1e
+
+    const-string v2, "externalStorageSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1f
+
+    const-string v2, "cameraSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x20
+
+    const-string v2, "recordAudioSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x21
+
+    const-string v2, "notificationSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x22
+
+    const-string v2, "intentBootCompletedSetting"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/content/Context;)V
+    .registers 6
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacyPersistenceAdapter;->context:Landroid/content/Context;
+
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->canWrite()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_3c
+
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/privacy.db"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v2
+
+    if-nez v2, :cond_22
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createDatabase()V
+
+    :cond_22
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/privacy"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v2
+
+    if-nez v2, :cond_32
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createSettingsDir()V
+
+    :cond_32
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDbVersion()I
+
+    move-result v1
+
+    const/4 v2, 0x3
+
+    if-ge v1, v2, :cond_3c
+
+    invoke-direct {p0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->upgradeDatabase(I)V
+
+    :cond_3c
+    return-void
+.end method
+
+.method private declared-synchronized createDatabase()V
+    .registers 6
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    monitor-enter p0
+
+    :try_start_3
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database file"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_a
+    .catchall {:try_start_3 .. :try_end_a} :catchall_4f
+
+    :try_start_a
+    const-string v2, "/data/system/privacy.db"
+
+    const/4 v3, 0x0
+
+    const/high16 v4, 0x1000
+
+    invoke-static {v2, v3, v4}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 3);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    if-eqz v0, :cond_43
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_43
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_43
+    .catchall {:try_start_a .. :try_end_43} :catchall_4f
+    .catch Landroid/database/SQLException; {:try_start_a .. :try_end_43} :catch_45
+
+    :cond_43
+    :goto_43
+    monitor-exit p0
+
+    return-void
+
+    :catch_45
+    move-exception v2
+
+    move-object v1, v2
+
+    :try_start_47
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - failed to create privacy database"
+
+    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_4e
+    .catchall {:try_start_47 .. :try_end_4e} :catchall_4f
+
+    goto :goto_43
+
+    :catchall_4f
+    move-exception v2
+
+    monitor-exit p0
+
+    throw v2
+.end method
+
+.method private declared-synchronized createSettingsDir()V
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy/"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->mkdirs()Z
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setReadable(ZZ)Z
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setExecutable(ZZ)Z
+    :try_end_15
+    .catchall {:try_start_1 .. :try_end_15} :catchall_17
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_17
+    move-exception v1
+
+    monitor-exit p0
+
+    throw v1
+.end method
+
+.method private deleteRecursive(Ljava/io/File;)V
+    .registers 7
+
+    invoke-virtual {p1}, Ljava/io/File;->isDirectory()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_16
+
+    invoke-virtual {p1}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v0
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_c
+    if-ge v2, v3, :cond_16
+
+    aget-object v1, v0, v2
+
+    invoke-direct {p0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_c
+
+    :cond_16
+    invoke-virtual {p1}, Ljava/io/File;->delete()Z
+
+    return-void
+.end method
+
+.method private getDbVersion()I
+    .registers 11
+
+    const/4 v8, 0x1
+
+    const-string v9, "PrivacyPersistenceAdapter"
+
+    const/4 v3, -0x1
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    add-int/lit8 v6, v6, 0x1
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v1
+
+    :try_start_18
+    const-string v6, "SELECT name FROM sqlite_master WHERE type=\'table\' AND name=\'map\';"
+
+    invoke-direct {p0, v1, v6}, Landroid/privacy/PrivacyPersistenceAdapter;->rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_61
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I
+
+    move-result v6
+
+    if-nez v6, :cond_27
+
+    const/4 v3, 0x1
+
+    :cond_27
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v6
+    :try_end_2d
+    .catch Ljava/lang/Exception; {:try_start_18 .. :try_end_2d} :catch_57
+
+    :try_start_2d
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    sub-int/2addr v7, v8
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    sput-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    if-nez v7, :cond_4f
+
+    if-eqz v1, :cond_4f
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v7
+
+    if-eqz v7, :cond_4f
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_4f
+    monitor-exit v6
+
+    :goto_50
+    if-ne v3, v8, :cond_69
+
+    move v6, v3
+
+    :goto_53
+    return v6
+
+    :catchall_54
+    move-exception v7
+
+    monitor-exit v6
+    :try_end_56
+    .catchall {:try_start_2d .. :try_end_56} :catchall_54
+
+    :try_start_56
+    throw v7
+    :try_end_57
+    .catch Ljava/lang/Exception; {:try_start_56 .. :try_end_57} :catch_57
+
+    :catch_57
+    move-exception v6
+
+    move-object v2, v6
+
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v6, "getDbVersion - failed to check if table map exists (exception)"
+
+    invoke-static {v9, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_50
+
+    :cond_61
+    :try_start_61
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v7, "getDbVersion - failed to check if table map exists (cursor is null)"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_68
+    .catch Ljava/lang/Exception; {:try_start_61 .. :try_end_68} :catch_57
+
+    goto :goto_50
+
+    :cond_69
+    const-string v6, "db_version"
+
+    invoke-virtual {p0, v6}, Landroid/privacy/PrivacyPersistenceAdapter;->getValue(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v5
+
+    if-nez v5, :cond_73
+
+    move v6, v8
+
+    goto :goto_53
+
+    :cond_73
+    :try_start_73
+    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+    :try_end_76
+    .catch Ljava/lang/Exception; {:try_start_73 .. :try_end_76} :catch_79
+
+    move-result v4
+
+    move v6, v4
+
+    goto :goto_53
+
+    :catch_79
+    move-exception v2
+
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v6, "getDbVersion - failed to parse database version; returning 1"
+
+    invoke-static {v9, v6}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v6, v8
+
+    goto :goto_53
+.end method
+
+.method private declared-synchronized getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_11
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_11
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_f
+    .catchall {:try_start_1 .. :try_end_f} :catchall_1e
+
+    :goto_f
+    monitor-exit p0
+
+    return-object v0
+
+    :cond_11
+    :try_start_11
+    const-string v0, "/data/system/privacy.db"
+
+    const/4 v1, 0x0
+
+    const/4 v2, 0x1
+
+    invoke-static {v0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_1d
+    .catchall {:try_start_11 .. :try_end_1d} :catchall_1e
+
+    goto :goto_f
+
+    :catchall_1e
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method private declared-synchronized getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    .registers 4
+
+    const-string v0, "/data/system/privacy.db"
+
+    monitor-enter p0
+
+    :try_start_3
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy.db"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-nez v0, :cond_13
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createDatabase()V
+
+    :cond_13
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_2b
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_2b
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isReadOnly()Z
+
+    move-result v0
+
+    if-nez v0, :cond_2b
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_29
+    .catchall {:try_start_3 .. :try_end_29} :catchall_38
+
+    :goto_29
+    monitor-exit p0
+
+    return-object v0
+
+    :cond_2b
+    :try_start_2b
+    const-string v0, "/data/system/privacy.db"
+
+    const/4 v1, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {v0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_37
+    .catchall {:try_start_2b .. :try_end_37} :catchall_38
+
+    goto :goto_29
+
+    :catchall_38
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method private query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 16
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_28
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_28
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    invoke-virtual/range {p1 .. p9}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_10
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_10} :catch_15
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_12
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_15
+    move-exception v4
+
+    move-object v1, v4
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_23
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_12
+
+    :cond_28
+    if-nez v3, :cond_32
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_32
+    return-object v0
+.end method
+
+.method private rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_29
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_29
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    const/4 v4, 0x0
+
+    invoke-virtual {p1, p2, v4}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_11
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_11} :catch_16
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_13
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_16
+    move-exception v4
+
+    move-object v1, v4
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_24
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_24
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_24
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_13
+
+    :cond_29
+    if-nez v3, :cond_33
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_33
+    return-object v0
+.end method
+
+.method private declared-synchronized upgradeDatabase(I)V
+    .registers 24
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    new-instance v19, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v19 .. v19}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v20, "upgradeDatabase - upgrading DB from version "
+
+    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v19
+
+    move-object/from16 v0, v19
+
+    move/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v19
+
+    const-string v20, " to "
+
+    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v19
+
+    const/16 v20, 0x3
+
+    invoke-virtual/range {v19 .. v20}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v19
+
+    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v19
+
+    invoke-static/range {v18 .. v19}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v7, Ljava/io/File;
+
+    const-string v18, "/data/system/privacy.db"
+
+    move-object v0, v7
+
+    move-object/from16 v1, v18
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v6, Ljava/io/File;
+
+    const-string v18, "/data/system/privacy.db.bak"
+
+    move-object v0, v6
+
+    move-object/from16 v1, v18
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_3e
+    .catchall {:try_start_1 .. :try_end_3e} :catchall_68
+
+    :try_start_3e
+    invoke-virtual {v6}, Ljava/io/File;->delete()Z
+    :try_end_41
+    .catchall {:try_start_3e .. :try_end_41} :catchall_68
+    .catch Ljava/lang/SecurityException; {:try_start_3e .. :try_end_41} :catch_5e
+
+    :goto_41
+    :try_start_41
+    invoke-static {v7, v6}, Landroid/os/FileUtils;->copyFile(Ljava/io/File;Ljava/io/File;)Z
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v18
+
+    invoke-virtual {v6}, Ljava/io/File;->lastModified()J
+
+    move-result-wide v20
+
+    sub-long v18, v18, v20
+
+    const-wide/16 v20, 0x7d0
+
+    cmp-long v18, v18, v20
+
+    if-lez v18, :cond_6b
+
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v19, "upgradeDatabase - could not create a database backup, aborting..."
+
+    invoke-static/range {v18 .. v19}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_5c
+    .catchall {:try_start_41 .. :try_end_5c} :catchall_68
+
+    :goto_5c
+    monitor-exit p0
+
+    return-void
+
+    :catch_5e
+    move-exception v8
+
+    :try_start_5f
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v19, "upgradeDatabase - could not remove old backup"
+
+    invoke-static/range {v18 .. v19}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_67
+    .catchall {:try_start_5f .. :try_end_67} :catchall_68
+
+    goto :goto_41
+
+    :catchall_68
+    move-exception v18
+
+    monitor-exit p0
+
+    throw v18
+
+    :cond_6b
+    :try_start_6b
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+
+    packed-switch p1, :pswitch_data_172
+
+    :cond_75
+    :goto_75
+    if-eqz v5, :cond_168
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v18
+
+    if-eqz v18, :cond_168
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :goto_83
+    invoke-virtual/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->purgeSettings()Z
+    :try_end_86
+    .catchall {:try_start_6b .. :try_end_86} :catchall_68
+
+    goto :goto_5c
+
+    :pswitch_87
+    if-eqz v5, :cond_75
+
+    :try_start_89
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v18
+
+    if-eqz v18, :cond_75
+
+    const-string v18, "DROP TABLE IF EXISTS version;"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v18, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v18, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v18, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 3);"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v18, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v18, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    move-object v0, v5
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    new-instance v15, Ljava/io/File;
+
+    const-string v18, "/data/system/privacy"
+
+    move-object v0, v15
+
+    move-object/from16 v1, v18
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v15}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v3
+
+    array-length v11, v3
+
+    const/4 v9, 0x0
+
+    move v10, v9
+
+    :goto_d0
+    if-ge v10, v11, :cond_133
+
+    aget-object v14, v3, v10
+
+    invoke-virtual {v14}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v4
+
+    array-length v12, v4
+
+    const/4 v9, 0x0
+
+    :goto_da
+    if-ge v9, v12, :cond_12f
+
+    aget-object v17, v4, v9
+
+    invoke-virtual/range {v17 .. v17}, Ljava/io/File;->isDirectory()Z
+
+    move-result v18
+
+    if-eqz v18, :cond_12c
+
+    invoke-virtual/range {v17 .. v17}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v16
+
+    const/16 v18, 0x0
+
+    aget-object v18, v16, v18
+
+    if-eqz v18, :cond_12c
+
+    new-instance v13, Ljava/io/File;
+
+    new-instance v18, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-object/from16 v0, v18
+
+    move-object v1, v14
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const-string v19, "/"
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const/16 v19, 0x0
+
+    aget-object v19, v16, v19
+
+    invoke-virtual/range {v19 .. v19}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v19
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v18
+
+    move-object v0, v13
+
+    move-object/from16 v1, v18
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v13}, Ljava/io/File;->delete()Z
+
+    const/16 v18, 0x0
+
+    aget-object v18, v16, v18
+
+    move-object/from16 v0, v18
+
+    move-object v1, v13
+
+    invoke-virtual {v0, v1}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v17
+
+    invoke-direct {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    :cond_12c
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_da
+
+    :cond_12f
+    add-int/lit8 v9, v10, 0x1
+
+    move v10, v9
+
+    goto :goto_d0
+
+    :cond_133
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_136
+    .catchall {:try_start_89 .. :try_end_136} :catchall_68
+    .catch Ljava/lang/Exception; {:try_start_89 .. :try_end_136} :catch_138
+
+    goto/16 :goto_75
+
+    :catch_138
+    move-exception v18
+
+    move-object/from16 v8, v18
+
+    if-eqz v5, :cond_149
+
+    :try_start_13d
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v18
+
+    if-eqz v18, :cond_149
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_149
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v19, "upgradeDatabase - could not upgrade DB; will restore backup"
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v19
+
+    move-object v2, v8
+
+    invoke-static {v0, v1, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-static {v6, v7}, Landroid/os/FileUtils;->copyFile(Ljava/io/File;Ljava/io/File;)Z
+
+    invoke-virtual {v6}, Ljava/io/File;->delete()Z
+
+    goto/16 :goto_75
+
+    :pswitch_15e
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v19, "upgradeDatabase - trying to upgrade most current DB version"
+
+    invoke-static/range {v18 .. v19}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_75
+
+    :cond_168
+    const-string v18, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v19, "upgradeDatabase - database is null or closed; cant call endTransaction()"
+
+    invoke-static/range {v18 .. v19}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_170
+    .catchall {:try_start_13d .. :try_end_170} :catchall_68
+
+    goto/16 :goto_83
+
+    :pswitch_data_172
+    .packed-switch 0x1
+        :pswitch_87
+        :pswitch_87
+        :pswitch_15e
+    .end packed-switch
+.end method
+
+
+# virtual methods
+.method public declared-synchronized deleteSettings(Ljava/lang/String;)Z
+    .registers 16
+
+    monitor-enter p0
+
+    const/4 v11, 0x1
+
+    :try_start_2
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_9
+    .catchall {:try_start_2 .. :try_end_9} :catchall_103
+
+    :try_start_9
+    const-string v1, "settings"
+
+    const/4 v2, 0x1
+
+    new-array v2, v2, [Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    const-string v4, "_id"
+
+    aput-object v4, v2, v3
+
+    const-string v3, "packageName=?"
+
+    const/4 v4, 0x1
+
+    new-array v4, v4, [Ljava/lang/String;
+
+    const/4 v5, 0x0
+
+    aput-object p1, v4, v5
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v0 .. v7}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_49
+
+    invoke-interface {v8}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-lez v1, :cond_49
+
+    invoke-interface {v8}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_49
+
+    const/4 v1, 0x0
+
+    invoke-interface {v8, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v10
+
+    const-string v1, "allowed_contacts"
+
+    const-string v2, "settings_id=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-interface {v8}, Landroid/database/Cursor;->close()V
+
+    :cond_49
+    const-string v1, "settings"
+
+    const-string v2, "packageName=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    aput-object p1, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v1
+
+    if-nez v1, :cond_88
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "deleteSettings - database entry for "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " not found"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_77
+    .catchall {:try_start_9 .. :try_end_77} :catchall_106
+    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_77} :catch_ea
+
+    const/4 v1, 0x0
+
+    :try_start_78
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_86
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_86
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_86
+    .catchall {:try_start_78 .. :try_end_86} :catchall_103
+
+    :cond_86
+    :goto_86
+    monitor-exit p0
+
+    return v1
+
+    :cond_88
+    :try_start_88
+    new-instance v12, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v12, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v13, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/systemLogsSetting"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v13, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v13}, Ljava/io/File;->delete()Z
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_d4
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    array-length v1, v1
+
+    if-nez v1, :cond_d7
+
+    :cond_d4
+    invoke-virtual {v12}, Ljava/io/File;->delete()Z
+
+    :cond_d7
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_da
+    .catchall {:try_start_88 .. :try_end_da} :catchall_106
+    .catch Ljava/lang/Exception; {:try_start_88 .. :try_end_da} :catch_ea
+
+    :try_start_da
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_e8
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_e8
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_e8
+    .catchall {:try_start_da .. :try_end_e8} :catchall_103
+
+    :cond_e8
+    :goto_e8
+    move v1, v11
+
+    goto :goto_86
+
+    :catch_ea
+    move-exception v1
+
+    move-object v9, v1
+
+    const/4 v11, 0x0
+
+    :try_start_ed
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v2, "deleteSettings - could not delete settings"
+
+    invoke-static {v1, v2, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_f4
+    .catchall {:try_start_ed .. :try_end_f4} :catchall_106
+
+    :try_start_f4
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_e8
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_e8
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_102
+    .catchall {:try_start_f4 .. :try_end_102} :catchall_103
+
+    goto :goto_e8
+
+    :catchall_103
+    move-exception v1
+
+    monitor-exit p0
+
+    throw v1
+
+    :catchall_106
+    move-exception v1
+
+    :try_start_107
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_115
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_115
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_115
+    throw v1
+    :try_end_116
+    .catchall {:try_start_107 .. :try_end_116} :catchall_103
+.end method
+
+.method public getSettings(Ljava/lang/String;Z)Landroid/privacy/PrivacySettings;
+    .registers 49
+
+    const/16 v45, 0x0
+
+    if-nez p1, :cond_e
+
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    const-string v4, "getSettings - insufficient application identifier - package name is required"
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v5, v45
+
+    :goto_d
+    return-object v45
+
+    :cond_e
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, 0x1
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    :try_start_1e
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_21
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_1e .. :try_end_21} :catch_284
+
+    move-result-object v4
+
+    const/16 v43, 0x0
+
+    :try_start_24
+    const-string v5, "settings"
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    const-string v7, "packageName=?"
+
+    const/4 v3, 0x1
+
+    new-array v8, v3, [Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    aput-object p1, v8, v3
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v12}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v43
+
+    if-eqz v43, :cond_319
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_319
+
+    new-instance v5, Landroid/privacy/PrivacySettings;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v3
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    const/4 v3, 0x1
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v7
+
+    const/4 v3, 0x2
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v8
+
+    const/4 v3, 0x3
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    int-to-byte v9, v3
+
+    const/4 v3, 0x4
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v10
+
+    const/4 v3, 0x5
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    int-to-byte v11, v3
+
+    const/4 v3, 0x6
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    const/4 v3, 0x7
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    int-to-byte v13, v3
+
+    const/16 v3, 0x8
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v14
+
+    const/16 v3, 0x9
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v15
+
+    const/16 v3, 0xa
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v16, v0
+
+    const/16 v3, 0xb
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v17
+
+    const/16 v3, 0xc
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v18
+
+    const/16 v3, 0xd
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v19, v0
+
+    const/16 v3, 0xe
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v20, v0
+
+    const/16 v3, 0xf
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v21, v0
+
+    const/16 v3, 0x10
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v22
+
+    const/16 v3, 0x11
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v23, v0
+
+    const/16 v3, 0x12
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v24
+
+    const/16 v3, 0x13
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v25, v0
+
+    const/16 v3, 0x14
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v26, v0
+
+    const/16 v3, 0x15
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v27, v0
+
+    const/16 v3, 0x16
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v28, v0
+
+    const/16 v3, 0x17
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v29, v0
+
+    const/16 v3, 0x18
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v30, v0
+
+    const/16 v3, 0x19
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v31, v0
+
+    const/16 v3, 0x1a
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v32, v0
+
+    const/16 v3, 0x1b
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v33, v0
+
+    const/16 v3, 0x1c
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v34, v0
+
+    const/16 v3, 0x1d
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v35, v0
+
+    const/16 v3, 0x1e
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v36, v0
+
+    const/16 v3, 0x1f
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v37, v0
+
+    const/16 v3, 0x20
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v38, v0
+
+    const/16 v3, 0x21
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v39, v0
+
+    const/16 v3, 0x22
+
+    move-object/from16 v0, v43
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v3
+
+    move v0, v3
+
+    int-to-byte v0, v0
+
+    move/from16 v40, v0
+
+    const/16 v41, 0x0
+
+    invoke-direct/range {v5 .. v41}, Landroid/privacy/PrivacySettings;-><init>(Ljava/lang/Integer;Ljava/lang/String;IBLjava/lang/String;BLjava/lang/String;BLjava/lang/String;Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;BBBLjava/lang/String;BLjava/lang/String;BBBBBBBBBBBBBBBB[I)V
+    :try_end_1d7
+    .catchall {:try_start_24 .. :try_end_1d7} :catchall_2dd
+    .catch Ljava/lang/Exception; {:try_start_24 .. :try_end_1d7} :catch_312
+
+    :try_start_1d7
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "SELECT * FROM allowed_contacts WHERE settings_id="
+
+    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v5}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v6, ";"
+
+    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    move-object v1, v4
+
+    move-object v2, v3
+
+    invoke-direct {v0, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v43
+
+    if-eqz v43, :cond_2aa
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->getCount()I
+
+    move-result v3
+
+    if-lez v3, :cond_2aa
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->getCount()I
+
+    move-result v3
+
+    move v0, v3
+
+    new-array v0, v0, [I
+
+    move-object/from16 v42, v0
+
+    :goto_215
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_2a4
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v3
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, v43
+
+    move v1, v6
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v6
+
+    aput v6, v42, v3
+    :try_end_229
+    .catchall {:try_start_1d7 .. :try_end_229} :catchall_310
+    .catch Ljava/lang/Exception; {:try_start_1d7 .. :try_end_229} :catch_22a
+
+    goto :goto_215
+
+    :catch_22a
+    move-exception v3
+
+    move-object/from16 v44, v3
+
+    :goto_22d
+    :try_start_22d
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "getSettings - failed to get settings for package: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    move-object v0, v6
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    move-object v0, v3
+
+    move-object v1, v6
+
+    move-object/from16 v2, v44
+
+    invoke-static {v0, v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-virtual/range {v44 .. v44}, Ljava/lang/Exception;->printStackTrace()V
+
+    if-eqz v43, :cond_254
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->close()V
+    :try_end_254
+    .catchall {:try_start_22d .. :try_end_254} :catchall_310
+
+    :cond_254
+    if-eqz v43, :cond_259
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->close()V
+
+    :cond_259
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v3
+
+    :try_start_25c
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    sub-int/2addr v6, v7
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_27f
+
+    if-eqz v4, :cond_27f
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_27f
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_27f
+    monitor-exit v3
+    :try_end_280
+    .catchall {:try_start_25c .. :try_end_280} :catchall_2da
+
+    :goto_280
+    move-object/from16 v45, v5
+
+    goto/16 :goto_d
+
+    :catch_284
+    move-exception v44
+
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    const-string v4, "getSettings - database could not be opened"
+
+    move-object v0, v3
+
+    move-object v1, v4
+
+    move-object/from16 v2, v44
+
+    invoke-static {v0, v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    const/4 v4, 0x1
+
+    sub-int/2addr v3, v4
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    move-object/from16 v5, v45
+
+    goto/16 :goto_d
+
+    :cond_2a4
+    :try_start_2a4
+    move-object v0, v5
+
+    move-object/from16 v1, v42
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacySettings;->setAllowedContacts([I)V
+    :try_end_2aa
+    .catchall {:try_start_2a4 .. :try_end_2aa} :catchall_310
+    .catch Ljava/lang/Exception; {:try_start_2a4 .. :try_end_2aa} :catch_22a
+
+    :cond_2aa
+    :goto_2aa
+    if-eqz v43, :cond_2af
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->close()V
+
+    :cond_2af
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v3
+
+    :try_start_2b2
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    sub-int/2addr v6, v7
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_2d5
+
+    if-eqz v4, :cond_2d5
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_2d5
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_2d5
+    monitor-exit v3
+
+    goto :goto_280
+
+    :catchall_2d7
+    move-exception v4
+
+    monitor-exit v3
+    :try_end_2d9
+    .catchall {:try_start_2b2 .. :try_end_2d9} :catchall_2d7
+
+    throw v4
+
+    :catchall_2da
+    move-exception v4
+
+    :try_start_2db
+    monitor-exit v3
+    :try_end_2dc
+    .catchall {:try_start_2db .. :try_end_2dc} :catchall_2da
+
+    throw v4
+
+    :catchall_2dd
+    move-exception v3
+
+    move-object/from16 v5, v45
+
+    :goto_2e0
+    if-eqz v43, :cond_2e5
+
+    invoke-interface/range {v43 .. v43}, Landroid/database/Cursor;->close()V
+
+    :cond_2e5
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+
+    :try_start_2e8
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    sub-int/2addr v6, v7
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_30b
+
+    if-eqz v4, :cond_30b
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_30b
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_30b
+    monitor-exit v5
+    :try_end_30c
+    .catchall {:try_start_2e8 .. :try_end_30c} :catchall_30d
+
+    throw v3
+
+    :catchall_30d
+    move-exception v3
+
+    :try_start_30e
+    monitor-exit v5
+    :try_end_30f
+    .catchall {:try_start_30e .. :try_end_30f} :catchall_30d
+
+    throw v3
+
+    :catchall_310
+    move-exception v3
+
+    goto :goto_2e0
+
+    :catch_312
+    move-exception v3
+
+    move-object/from16 v44, v3
+
+    move-object/from16 v5, v45
+
+    goto/16 :goto_22d
+
+    :cond_319
+    move-object/from16 v5, v45
+
+    goto :goto_2aa
+.end method
+
+.method public getValue(Ljava/lang/String;)Ljava/lang/String;
+    .registers 15
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    add-int/lit8 v0, v0, 0x1
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v1
+
+    const/4 v12, 0x0
+
+    :try_start_15
+    const-string v2, "map"
+
+    const/4 v0, 0x1
+
+    new-array v3, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    const-string/jumbo v4, "value"
+
+    aput-object v4, v3, v0
+
+    const-string v4, "name=?"
+
+    const/4 v0, 0x1
+
+    new-array v5, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    aput-object p1, v5, v0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v9}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_75
+
+    invoke-interface {v10}, Landroid/database/Cursor;->getCount()I
+
+    move-result v0
+
+    if-lez v0, :cond_75
+
+    invoke-interface {v10}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_75
+
+    const-string/jumbo v0, "value"
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-interface {v10}, Landroid/database/Cursor;->close()V
+    :try_end_4d
+    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_4d} :catch_8e
+
+    :goto_4d
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v0
+
+    :try_start_50
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    const/4 v3, 0x1
+
+    sub-int/2addr v2, v3
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    sput-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    if-nez v2, :cond_73
+
+    if-eqz v1, :cond_73
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_73
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_73
+    monitor-exit v0
+    :try_end_74
+    .catchall {:try_start_50 .. :try_end_74} :catchall_a9
+
+    return-object v12
+
+    :cond_75
+    :try_start_75
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getValue - could not get value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_8d
+    .catch Ljava/lang/Exception; {:try_start_75 .. :try_end_8d} :catch_8e
+
+    goto :goto_4d
+
+    :catch_8e
+    move-exception v0
+
+    move-object v11, v0
+
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getValue - could not get value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2, v11}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_4d
+
+    :catchall_a9
+    move-exception v1
+
+    :try_start_aa
+    monitor-exit v0
+    :try_end_ab
+    .catchall {:try_start_aa .. :try_end_ab} :catchall_a9
+
+    throw v1
+.end method
+
+.method public purgeSettings()Z
+    .registers 29
+
+    const/16 v26, 0x1
+
+    new-instance v14, Ljava/util/ArrayList;
+
+    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Landroid/privacy/PrivacyPersistenceAdapter;->context:Landroid/content/Context;
+
+    move-object v3, v0
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v22
+
+    const/16 v3, 0x80
+
+    move-object/from16 v0, v22
+
+    move v1, v3
+
+    invoke-virtual {v0, v1}, Landroid/content/pm/PackageManager;->getInstalledApplications(I)Ljava/util/List;
+
+    move-result-object v20
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v19
+
+    :goto_1d
+    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_2f
+
+    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Landroid/content/pm/ApplicationInfo;
+
+    iget-object v3, v13, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v14, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    goto :goto_1d
+
+    :cond_2f
+    new-instance v27, Ljava/io/File;
+
+    const-string v3, "/data/system/privacy"
+
+    move-object/from16 v0, v27
+
+    move-object v1, v3
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual/range {v27 .. v27}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    array-length v0, v0
+
+    move/from16 v21, v0
+
+    const/16 v19, 0x0
+
+    :goto_44
+    move/from16 v0, v19
+
+    move/from16 v1, v21
+
+    if-ge v0, v1, :cond_63
+
+    aget-object v24, v16, v19
+
+    invoke-virtual/range {v24 .. v24}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v25
+
+    move-object v0, v14
+
+    move-object/from16 v1, v25
+
+    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_60
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    :cond_60
+    add-int/lit8 v19, v19, 0x1
+
+    goto :goto_44
+
+    :cond_63
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, 0x1
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    sput-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v4
+
+    const/16 v17, 0x0
+
+    :try_start_79
+    const-string v5, "settings"
+
+    const/4 v3, 0x1
+
+    new-array v6, v3, [Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    const-string v7, "packageName"
+
+    aput-object v7, v6, v3
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v12}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v17
+
+    new-instance v15, Ljava/util/ArrayList;
+
+    invoke-direct {v15}, Ljava/util/ArrayList;-><init>()V
+
+    :goto_94
+    invoke-interface/range {v17 .. v17}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_14e
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v17
+
+    move v1, v3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v25
+
+    move-object v0, v14
+
+    move-object/from16 v1, v25
+
+    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_f0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v25
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteSettings(Ljava/lang/String;)Z
+    :try_end_b2
+    .catchall {:try_start_79 .. :try_end_b2} :catchall_112
+    .catch Ljava/lang/Exception; {:try_start_79 .. :try_end_b2} :catch_b3
+
+    goto :goto_94
+
+    :catch_b3
+    move-exception v3
+
+    move-object/from16 v18, v3
+
+    :try_start_b6
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    const-string v5, "purgeSettings - purging DB failed"
+
+    move-object v0, v3
+
+    move-object v1, v5
+
+    move-object/from16 v2, v18
+
+    invoke-static {v0, v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_c1
+    .catchall {:try_start_b6 .. :try_end_c1} :catchall_112
+
+    const/16 v26, 0x0
+
+    if-eqz v17, :cond_c8
+
+    invoke-interface/range {v17 .. v17}, Landroid/database/Cursor;->close()V
+
+    :cond_c8
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v3
+
+    :try_start_cb
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    const/4 v6, 0x1
+
+    sub-int/2addr v5, v6
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    sput-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    if-nez v5, :cond_ee
+
+    if-eqz v4, :cond_ee
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_ee
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_ee
+    monitor-exit v3
+    :try_end_ef
+    .catchall {:try_start_cb .. :try_end_ef} :catchall_14b
+
+    :goto_ef
+    return v26
+
+    :cond_f0
+    :try_start_f0
+    move-object v0, v15
+
+    move-object/from16 v1, v25
+
+    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_140
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v25
+
+    move v2, v3
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->getSettings(Ljava/lang/String;Z)Landroid/privacy/PrivacySettings;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v25
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteSettings(Ljava/lang/String;)Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+    :try_end_111
+    .catchall {:try_start_f0 .. :try_end_111} :catchall_112
+    .catch Ljava/lang/Exception; {:try_start_f0 .. :try_end_111} :catch_b3
+
+    goto :goto_94
+
+    :catchall_112
+    move-exception v3
+
+    if-eqz v17, :cond_118
+
+    invoke-interface/range {v17 .. v17}, Landroid/database/Cursor;->close()V
+
+    :cond_118
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+
+    :try_start_11b
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    sub-int/2addr v6, v7
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_13e
+
+    if-eqz v4, :cond_13e
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_13e
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_13e
+    monitor-exit v5
+    :try_end_13f
+    .catchall {:try_start_11b .. :try_end_13f} :catchall_148
+
+    throw v3
+
+    :cond_140
+    :try_start_140
+    move-object v0, v15
+
+    move-object/from16 v1, v25
+
+    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_146
+    .catchall {:try_start_140 .. :try_end_146} :catchall_112
+    .catch Ljava/lang/Exception; {:try_start_140 .. :try_end_146} :catch_b3
+
+    goto/16 :goto_94
+
+    :catchall_148
+    move-exception v3
+
+    :try_start_149
+    monitor-exit v5
+    :try_end_14a
+    .catchall {:try_start_149 .. :try_end_14a} :catchall_148
+
+    throw v3
+
+    :catchall_14b
+    move-exception v4
+
+    :try_start_14c
+    monitor-exit v3
+    :try_end_14d
+    .catchall {:try_start_14c .. :try_end_14d} :catchall_14b
+
+    throw v4
+
+    :cond_14e
+    if-eqz v17, :cond_153
+
+    invoke-interface/range {v17 .. v17}, Landroid/database/Cursor;->close()V
+
+    :cond_153
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v3
+
+    :try_start_156
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    const/4 v6, 0x1
+
+    sub-int/2addr v5, v6
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    sput-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    if-nez v5, :cond_179
+
+    if-eqz v4, :cond_179
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_179
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_179
+    monitor-exit v3
+
+    goto/16 :goto_ef
+
+    :catchall_17c
+    move-exception v4
+
+    monitor-exit v3
+    :try_end_17e
+    .catchall {:try_start_156 .. :try_end_17e} :catchall_17c
+
+    throw v4
+.end method
+
+.method public declared-synchronized saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 30
+
+    monitor-enter p0
+
+    const/16 v21, 0x1
+
+    :try_start_3
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v20
+
+    if-eqz v20, :cond_f
+
+    invoke-virtual/range {v20 .. v20}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_19
+
+    :cond_f
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v7, "saveSettings - either package name, UID or both is missing"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_16
+    .catchall {:try_start_3 .. :try_end_16} :catchall_2fe
+
+    const/4 v6, 0x0
+
+    :goto_17
+    monitor-exit p0
+
+    return v6
+
+    :cond_19
+    :try_start_19
+    new-instance v26, Landroid/content/ContentValues;
+
+    invoke-direct/range {v26 .. v26}, Landroid/content/ContentValues;-><init>()V
+
+    const-string v6, "packageName"
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object/from16 v2, v20
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v6, "uid"
+
+    const/4 v7, -0x1
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "deviceIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "deviceId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "line1NumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "line1Number"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "locationGpsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "locationGpsLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "locationGpsLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "locationNetworkSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "locationNetworkLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "locationNetworkLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "networkInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "simInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "simSerialNumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumberSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "simSerialNumber"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumber()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v6, "subscriberIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v6, "subscriberId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v6, "accountsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "accountsAuthTokensSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "outgoingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getOutgoingCallsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "incomingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "contactsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "calendarSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCalendarSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "mmsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "smsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "callLogSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCallLogSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "bookmarksSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getBookmarksSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v6, "systemLogsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "notificationSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNotificationSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v6, "intentBootCompletedSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIntentBootCompletedSetting()B
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v7
+
+    move-object/from16 v0, v26
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    add-int/lit8 v6, v6, 0x1
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_21e
+    .catchall {:try_start_19 .. :try_end_21e} :catchall_2fe
+
+    const/4 v14, 0x0
+
+    :try_start_21f
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v18
+
+    if-eqz v18, :cond_304
+
+    const-string v6, "settings"
+
+    const-string v7, "_id=?"
+
+    const/4 v8, 0x1
+
+    new-array v8, v8, [Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    move-object v0, v5
+
+    move-object v1, v6
+
+    move-object/from16 v2, v26
+
+    move-object v3, v7
+
+    move-object v4, v8
+
+    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ge v6, v7, :cond_280
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to update database entry"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+    :try_end_248
+    .catchall {:try_start_21f .. :try_end_248} :catchall_2cd
+    .catch Ljava/lang/Exception; {:try_start_21f .. :try_end_248} :catch_248
+
+    :catch_248
+    move-exception v6
+
+    move-object/from16 v16, v6
+
+    const/16 v21, 0x0
+
+    :try_start_24d
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v14, :cond_255
+
+    invoke-interface {v14}, Landroid/database/Cursor;->close()V
+
+    :cond_255
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v6
+    :try_end_258
+    .catchall {:try_start_24d .. :try_end_258} :catchall_2fe
+
+    :try_start_258
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    const/4 v8, 0x1
+
+    sub-int/2addr v7, v8
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    sput-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    if-nez v7, :cond_27b
+
+    if-eqz v5, :cond_27b
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v7
+
+    if-eqz v7, :cond_27b
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_27b
+    monitor-exit v6
+    :try_end_27c
+    .catchall {:try_start_258 .. :try_end_27c} :catchall_51a
+
+    :goto_27c
+    move/from16 v6, v21
+
+    goto/16 :goto_17
+
+    :cond_280
+    :try_start_280
+    const-string v6, "allowed_contacts"
+
+    const-string v7, "settings_id=?"
+
+    const/4 v8, 0x1
+
+    new-array v8, v8, [Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    invoke-virtual {v5, v6, v7, v8}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v13
+
+    if-eqz v13, :cond_430
+
+    new-instance v15, Landroid/content/ContentValues;
+
+    invoke-direct {v15}, Landroid/content/ContentValues;-><init>()V
+
+    const/16 v17, 0x0
+
+    :goto_29e
+    array-length v6, v13
+
+    move/from16 v0, v17
+
+    move v1, v6
+
+    if-ge v0, v1, :cond_430
+
+    const-string v6, "settings_id"
+
+    move-object v0, v15
+
+    move-object v1, v6
+
+    move-object/from16 v2, v18
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "contact_id"
+
+    aget v7, v13, v17
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    invoke-virtual {v15, v6, v7}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "allowed_contacts"
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v5, v6, v7, v15}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v6
+
+    const-wide/16 v8, -0x1
+
+    cmp-long v6, v6, v8
+
+    if-nez v6, :cond_301
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+    :try_end_2cd
+    .catchall {:try_start_280 .. :try_end_2cd} :catchall_2cd
+    .catch Ljava/lang/Exception; {:try_start_280 .. :try_end_2cd} :catch_248
+
+    :catchall_2cd
+    move-exception v6
+
+    :try_start_2ce
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v14, :cond_2d6
+
+    invoke-interface {v14}, Landroid/database/Cursor;->close()V
+
+    :cond_2d6
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v7
+    :try_end_2d9
+    .catchall {:try_start_2ce .. :try_end_2d9} :catchall_2fe
+
+    :try_start_2d9
+    sget-object v8, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v8, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I
+
+    move-result v8
+
+    const/4 v9, 0x1
+
+    sub-int/2addr v8, v9
+
+    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    sput-object v8, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v8, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v8}, Ljava/lang/Integer;->intValue()I
+
+    move-result v8
+
+    if-nez v8, :cond_2fc
+
+    if-eqz v5, :cond_2fc
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v8
+
+    if-eqz v8, :cond_2fc
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_2fc
+    monitor-exit v7
+    :try_end_2fd
+    .catchall {:try_start_2d9 .. :try_end_2fd} :catchall_51d
+
+    :try_start_2fd
+    throw v6
+    :try_end_2fe
+    .catchall {:try_start_2fd .. :try_end_2fe} :catchall_2fe
+
+    :catchall_2fe
+    move-exception v6
+
+    monitor-exit p0
+
+    throw v6
+
+    :cond_301
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_29e
+
+    :cond_304
+    :try_start_304
+    const-string v6, "settings"
+
+    const/4 v7, 0x1
+
+    new-array v7, v7, [Ljava/lang/String;
+
+    const/4 v8, 0x0
+
+    const-string v9, "_id"
+
+    aput-object v9, v7, v8
+
+    const-string v8, "packageName=?"
+
+    const/4 v9, 0x1
+
+    new-array v9, v9, [Ljava/lang/String;
+
+    const/4 v10, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v11
+
+    aput-object v11, v9, v10
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    invoke-virtual/range {v5 .. v12}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v14
+
+    if-eqz v14, :cond_426
+
+    invoke-interface {v14}, Landroid/database/Cursor;->getCount()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ne v6, v7, :cond_3ac
+
+    const-string v6, "settings"
+
+    const-string v7, "packageName=?"
+
+    const/4 v8, 0x1
+
+    new-array v8, v8, [Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    move-object v0, v5
+
+    move-object v1, v6
+
+    move-object/from16 v2, v26
+
+    move-object v3, v7
+
+    move-object v4, v8
+
+    invoke-virtual {v0, v1, v2, v3, v4}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ge v6, v7, :cond_34d
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to update database entry"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_34d
+    invoke-interface {v14}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_430
+
+    const/4 v6, 0x0
+
+    invoke-interface {v14, v6}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v6
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v19
+
+    const-string v6, "allowed_contacts"
+
+    const-string v7, "settings_id=?"
+
+    const/4 v8, 0x1
+
+    new-array v8, v8, [Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {v19 .. v19}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    invoke-virtual {v5, v6, v7, v8}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v13
+
+    if-eqz v13, :cond_430
+
+    new-instance v15, Landroid/content/ContentValues;
+
+    invoke-direct {v15}, Landroid/content/ContentValues;-><init>()V
+
+    const/16 v17, 0x0
+
+    :goto_37a
+    array-length v6, v13
+
+    move/from16 v0, v17
+
+    move v1, v6
+
+    if-ge v0, v1, :cond_430
+
+    const-string v6, "settings_id"
+
+    move-object v0, v15
+
+    move-object v1, v6
+
+    move-object/from16 v2, v19
+
+    invoke-virtual {v0, v1, v2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "contact_id"
+
+    aget v7, v13, v17
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    invoke-virtual {v15, v6, v7}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "allowed_contacts"
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v5, v6, v7, v15}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v6
+
+    const-wide/16 v8, -0x1
+
+    cmp-long v6, v6, v8
+
+    if-nez v6, :cond_3a9
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_3a9
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_37a
+
+    :cond_3ac
+    invoke-interface {v14}, Landroid/database/Cursor;->getCount()I
+
+    move-result v6
+
+    if-nez v6, :cond_41c
+
+    const-string v6, "settings"
+
+    const/4 v7, 0x0
+
+    move-object v0, v5
+
+    move-object v1, v6
+
+    move-object v2, v7
+
+    move-object/from16 v3, v26
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v22
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v6, v22, v6
+
+    if-nez v6, :cond_3cc
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to insert new record into DB"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_3cc
+    const-string v6, "allowed_contacts"
+
+    const-string v7, "settings_id=?"
+
+    const/4 v8, 0x1
+
+    new-array v8, v8, [Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->toString(J)Ljava/lang/String;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    invoke-virtual {v5, v6, v7, v8}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v13
+
+    if-eqz v13, :cond_430
+
+    new-instance v15, Landroid/content/ContentValues;
+
+    invoke-direct {v15}, Landroid/content/ContentValues;-><init>()V
+
+    const/16 v17, 0x0
+
+    :goto_3ea
+    array-length v6, v13
+
+    move/from16 v0, v17
+
+    move v1, v6
+
+    if-ge v0, v1, :cond_430
+
+    const-string v6, "settings_id"
+
+    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v7
+
+    invoke-virtual {v15, v6, v7}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V
+
+    const-string v6, "contact_id"
+
+    aget v7, v13, v17
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    invoke-virtual {v15, v6, v7}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v6, "allowed_contacts"
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v5, v6, v7, v15}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v6
+
+    const-wide/16 v8, -0x1
+
+    cmp-long v6, v6, v8
+
+    if-nez v6, :cond_419
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_419
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_3ea
+
+    :cond_41c
+    const/16 v21, 0x0
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - duplicate entries in the privacy.db"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_426
+    const/16 v21, 0x0
+
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - cursor is null, database access failed"
+
+    invoke-direct {v6, v7}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_430
+    new-instance v24, Ljava/io/File;
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "/data/system/privacy/"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    move-object v0, v6
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "/"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    move-object/from16 v0, v24
+
+    move-object v1, v6
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v25, Ljava/io/File;
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "/data/system/privacy/"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    move-object v0, v6
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "/"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "/systemLogsSetting"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    move-object/from16 v0, v25
+
+    move-object v1, v6
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_47e
+    .catchall {:try_start_304 .. :try_end_47e} :catchall_2cd
+    .catch Ljava/lang/Exception; {:try_start_304 .. :try_end_47e} :catch_248
+
+    :try_start_47e
+    invoke-virtual/range {v24 .. v24}, Ljava/io/File;->mkdirs()Z
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, v24
+
+    move v1, v6
+
+    move v2, v7
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setReadable(ZZ)Z
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, v24
+
+    move v1, v6
+
+    move v2, v7
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setExecutable(ZZ)Z
+
+    invoke-virtual/range {v25 .. v25}, Ljava/io/File;->createNewFile()Z
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, v25
+
+    move v1, v6
+
+    move v2, v7
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setReadable(ZZ)Z
+
+    new-instance v27, Ljava/io/OutputStreamWriter;
+
+    new-instance v6, Ljava/io/FileOutputStream;
+
+    move-object v0, v6
+
+    move-object/from16 v1, v25
+
+    invoke-direct {v0, v1}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
+
+    move-object/from16 v0, v27
+
+    move-object v1, v6
+
+    invoke-direct {v0, v1}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, ""
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    move-object/from16 v0, v27
+
+    move-object v1, v6
+
+    invoke-virtual {v0, v1}, Ljava/io/OutputStreamWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+
+    invoke-virtual/range {v27 .. v27}, Ljava/io/OutputStreamWriter;->flush()V
+
+    invoke-virtual/range {v27 .. v27}, Ljava/io/OutputStreamWriter;->close()V
+    :try_end_4d2
+    .catchall {:try_start_47e .. :try_end_4d2} :catchall_2cd
+    .catch Ljava/io/IOException; {:try_start_47e .. :try_end_4d2} :catch_509
+    .catch Ljava/lang/Exception; {:try_start_47e .. :try_end_4d2} :catch_248
+
+    :try_start_4d2
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_4d5
+    .catchall {:try_start_4d2 .. :try_end_4d5} :catchall_2cd
+    .catch Ljava/lang/Exception; {:try_start_4d2 .. :try_end_4d5} :catch_248
+
+    :try_start_4d5
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v14, :cond_4dd
+
+    invoke-interface {v14}, Landroid/database/Cursor;->close()V
+
+    :cond_4dd
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v6
+    :try_end_4e0
+    .catchall {:try_start_4d5 .. :try_end_4e0} :catchall_2fe
+
+    :try_start_4e0
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    const/4 v8, 0x1
+
+    sub-int/2addr v7, v8
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    sput-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    if-nez v7, :cond_503
+
+    if-eqz v5, :cond_503
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v7
+
+    if-eqz v7, :cond_503
+
+    invoke-virtual {v5}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_503
+    monitor-exit v6
+
+    goto/16 :goto_27c
+
+    :catchall_506
+    move-exception v7
+
+    monitor-exit v6
+    :try_end_508
+    .catchall {:try_start_4e0 .. :try_end_508} :catchall_506
+
+    :try_start_508
+    throw v7
+    :try_end_509
+    .catchall {:try_start_508 .. :try_end_509} :catchall_2fe
+
+    :catch_509
+    move-exception v6
+
+    move-object/from16 v16, v6
+
+    const/16 v21, 0x0
+
+    :try_start_50e
+    new-instance v6, Ljava/lang/Exception;
+
+    const-string v7, "saveSettings - could not write settings to file"
+
+    move-object v0, v6
+
+    move-object v1, v7
+
+    move-object/from16 v2, v16
+
+    invoke-direct {v0, v1, v2}, Ljava/lang/Exception;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+
+    throw v6
+    :try_end_51a
+    .catchall {:try_start_50e .. :try_end_51a} :catchall_2cd
+    .catch Ljava/lang/Exception; {:try_start_50e .. :try_end_51a} :catch_248
+
+    :catchall_51a
+    move-exception v7
+
+    :try_start_51b
+    monitor-exit v6
+    :try_end_51c
+    .catchall {:try_start_51b .. :try_end_51c} :catchall_51a
+
+    :try_start_51c
+    throw v7
+    :try_end_51d
+    .catchall {:try_start_51c .. :try_end_51d} :catchall_2fe
+
+    :catchall_51d
+    move-exception v6
+
+    :try_start_51e
+    monitor-exit v7
+    :try_end_51f
+    .catchall {:try_start_51e .. :try_end_51f} :catchall_51d
+
+    :try_start_51f
+    throw v6
+    :try_end_520
+    .catchall {:try_start_51f .. :try_end_520} :catchall_2fe
+.end method
+
+.method public declared-synchronized setValue(Ljava/lang/String;Ljava/lang/String;)Z
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "setValue - name "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " value "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Landroid/content/ContentValues;
+
+    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V
+
+    const-string v3, "name"
+
+    invoke-virtual {v2, v3, p1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v3, "value"
+
+    invoke-virtual {v2, v3, p2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    const-string v3, "map"
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v0, v3, v4, v2}, Landroid/database/sqlite/SQLiteDatabase;->replace(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v3
+
+    const-wide/16 v5, -0x1
+
+    cmp-long v3, v3, v5
+
+    if-eqz v3, :cond_5b
+
+    const/4 v3, 0x1
+
+    move v1, v3
+
+    :goto_46
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    if-nez v3, :cond_59
+
+    if-eqz v0, :cond_59
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_59
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_59
+    .catchall {:try_start_1 .. :try_end_59} :catchall_5e
+
+    :cond_59
+    monitor-exit p0
+
+    return v1
+
+    :cond_5b
+    const/4 v3, 0x0
+
+    move v1, v3
+
+    goto :goto_46
+
+    :catchall_5e
+    move-exception v3
+
+    monitor-exit p0
+
+    throw v3
+.end method
