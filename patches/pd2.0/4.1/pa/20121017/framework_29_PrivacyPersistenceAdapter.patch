diff -Npru stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali ext-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali
--- stock-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	1969-12-31 18:00:00.000000000 -0600
+++ ext-framework/smali/android/privacy/PrivacyPersistenceAdapter.smali	2012-11-06 15:04:41.650675394 -0600
@@ -0,0 +1,5092 @@
+.class public Landroid/privacy/PrivacyPersistenceAdapter;
+.super Ljava/lang/Object;
+.source "PrivacyPersistenceAdapter.java"
+
+
+# static fields
+.field private static final CREATE_TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+.field private static final CREATE_TABLE_MAP:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+.field private static final CREATE_TABLE_SETTINGS:Ljava/lang/String; = "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER, smsSendSetting INTEGER, phoneCallSetting INTEGER, ipTableProtectSetting INTEGER, iccAccessSetting INTEGER, addOnManagementSetting INTEGER, androidIdSetting INTEGER, androidId TEXT, wifiInfoSetting INTEGER, switchConnectivitySetting INTEGER, sendMmsSetting INTEGER, forceOnlineState INTEGER, switchWifiStateSetting INTEGER);"
+
+.field private static final DATABASE_FIELDS:[Ljava/lang/String; = null
+
+.field private static final DATABASE_FILE:Ljava/lang/String; = "/data/system/privacy.db"
+
+.field private static final DATABASE_VERSION:I = 0x4
+
+.field public static final DUMMY_UID:I = -0x1
+
+.field private static final INSERT_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+.field private static final INSERT_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+.field private static final INSERT_VERSION:Ljava/lang/String; = "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+.field private static final RETRY_QUERY_COUNT:I = 0x5
+
+.field public static final SETTINGS_DIRECTORY:Ljava/lang/String; = "/data/system/privacy"
+
+.field public static final SETTING_DB_VERSION:Ljava/lang/String; = "db_version"
+
+.field public static final SETTING_ENABLED:Ljava/lang/String; = "enabled"
+
+.field public static final SETTING_NOTIFICATIONS_ENABLED:Ljava/lang/String; = "notifications_enabled"
+
+.field private static final TABLE_ALLOWED_CONTACTS:Ljava/lang/String; = "allowed_contacts"
+
+.field private static final TABLE_MAP:Ljava/lang/String; = "map"
+
+.field private static final TABLE_SETTINGS:Ljava/lang/String; = "settings"
+
+.field private static final TABLE_VERSION:Ljava/lang/String; = "version"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyPersistenceAdapter"
+
+.field public static final VALUE_FALSE:Ljava/lang/String; = "0"
+
+.field public static final VALUE_TRUE:Ljava/lang/String; = "1"
+
+.field public static readingThreads:Ljava/lang/Integer;
+
+
+# instance fields
+.field private context:Landroid/content/Context;
+
+.field private db:Landroid/database/sqlite/SQLiteDatabase;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/4 v2, 0x0
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    const/16 v0, 0x2f
+
+    new-array v0, v0, [Ljava/lang/String;
+
+    const-string v1, "_id"
+
+    aput-object v1, v0, v2
+
+    const/4 v1, 0x1
+
+    const-string/jumbo v2, "packageName"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string/jumbo v2, "uid"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "deviceIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "deviceId"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "line1NumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "line1Number"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "locationGpsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "locationGpsLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "locationGpsLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "locationNetworkSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "locationNetworkLat"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xc
+
+    const-string v2, "locationNetworkLon"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xd
+
+    const-string/jumbo v2, "networkInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xe
+
+    const-string/jumbo v2, "simInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xf
+
+    const-string/jumbo v2, "simSerialNumberSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x10
+
+    const-string/jumbo v2, "simSerialNumber"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x11
+
+    const-string/jumbo v2, "subscriberIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x12
+
+    const-string/jumbo v2, "subscriberId"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x13
+
+    const-string v2, "accountsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x14
+
+    const-string v2, "accountsAuthTokensSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x15
+
+    const-string/jumbo v2, "outgoingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x16
+
+    const-string v2, "incomingCallsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x17
+
+    const-string v2, "contactsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x18
+
+    const-string v2, "calendarSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x19
+
+    const-string/jumbo v2, "mmsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1a
+
+    const-string/jumbo v2, "smsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1b
+
+    const-string v2, "callLogSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1c
+
+    const-string v2, "bookmarksSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1d
+
+    const-string/jumbo v2, "systemLogsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1e
+
+    const-string v2, "externalStorageSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x1f
+
+    const-string v2, "cameraSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x20
+
+    const-string/jumbo v2, "recordAudioSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x21
+
+    const-string/jumbo v2, "notificationSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x22
+
+    const-string v2, "intentBootCompletedSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x23
+
+    const-string/jumbo v2, "smsSendSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x24
+
+    const-string/jumbo v2, "phoneCallSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x25
+
+    const-string v2, "ipTableProtectSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x26
+
+    const-string v2, "iccAccessSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x27
+
+    const-string v2, "addOnManagementSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x28
+
+    const-string v2, "androidIdSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x29
+
+    const-string v2, "androidId"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2a
+
+    const-string/jumbo v2, "wifiInfoSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2b
+
+    const-string/jumbo v2, "switchConnectivitySetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2c
+
+    const-string/jumbo v2, "sendMmsSetting"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2d
+
+    const-string v2, "forceOnlineState"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x2e
+
+    const-string/jumbo v2, "switchWifiStateSetting"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    return-void
+.end method
+
+.method public constructor <init>(Landroid/content/Context;)V
+    .registers 6
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    iput-object p1, p0, Landroid/privacy/PrivacyPersistenceAdapter;->context:Landroid/content/Context;
+
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->canWrite()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_3c
+
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/privacy.db"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v2
+
+    if-nez v2, :cond_22
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createDatabase()V
+
+    :cond_22
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "/data/system/privacy"
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v2
+
+    if-nez v2, :cond_32
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createSettingsDir()V
+
+    :cond_32
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getDbVersion()I
+
+    move-result v1
+
+    const/4 v2, 0x4
+
+    if-ge v1, v2, :cond_3c
+
+    invoke-direct {p0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->upgradeDatabase(I)V
+
+    :cond_3c
+    return-void
+.end method
+
+.method private declared-synchronized createDatabase()V
+    .registers 6
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database file"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_8
+    .catchall {:try_start_1 .. :try_end_8} :catchall_4c
+
+    :try_start_8
+    const-string v2, "/data/system/privacy.db"
+
+    const/4 v3, 0x0
+
+    const/high16 v4, 0x1000
+
+    invoke-static {v2, v3, v4}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - creating privacy database"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS settings (  _id INTEGER PRIMARY KEY AUTOINCREMENT,  packageName TEXT,  uid INTEGER,  deviceIdSetting INTEGER,  deviceId TEXT,  line1NumberSetting INTEGER,  line1Number TEXT,  locationGpsSetting INTEGER,  locationGpsLat TEXT,  locationGpsLon TEXT,  locationNetworkSetting INTEGER,  locationNetworkLat TEXT,  locationNetworkLon TEXT,  networkInfoSetting INTEGER,  simInfoSetting INTEGER,  simSerialNumberSetting INTEGER,  simSerialNumber TEXT,  subscriberIdSetting INTEGER,  subscriberId TEXT,  accountsSetting INTEGER,  accountsAuthTokensSetting INTEGER,  outgoingCallsSetting INTEGER,  incomingCallsSetting INTEGER,  contactsSetting INTEGER,  calendarSetting INTEGER,  mmsSetting INTEGER,  smsSetting INTEGER,  callLogSetting INTEGER,  bookmarksSetting INTEGER,  systemLogsSetting INTEGER,  externalStorageSetting INTEGER,  cameraSetting INTEGER,  recordAudioSetting INTEGER,  notificationSetting INTEGER,  intentBootCompletedSetting INTEGER, smsSendSetting INTEGER, phoneCallSetting INTEGER, ipTableProtectSetting INTEGER, iccAccessSetting INTEGER, addOnManagementSetting INTEGER, androidIdSetting INTEGER, androidId TEXT, wifiInfoSetting INTEGER, switchConnectivitySetting INTEGER, sendMmsSetting INTEGER, forceOnlineState INTEGER, switchWifiStateSetting INTEGER);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v2, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    invoke-virtual {v0, v2}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    if-eqz v0, :cond_41
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_41
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_41
+    .catchall {:try_start_8 .. :try_end_41} :catchall_4c
+    .catch Landroid/database/SQLException; {:try_start_8 .. :try_end_41} :catch_43
+
+    :cond_41
+    :goto_41
+    monitor-exit p0
+
+    return-void
+
+    :catch_43
+    move-exception v1
+
+    :try_start_44
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string v3, "createDatabase - failed to create privacy database"
+
+    invoke-static {v2, v3, v1}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_4b
+    .catchall {:try_start_44 .. :try_end_4b} :catchall_4c
+
+    goto :goto_41
+
+    :catchall_4c
+    move-exception v2
+
+    monitor-exit p0
+
+    throw v2
+.end method
+
+.method private declared-synchronized createSettingsDir()V
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy/"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->mkdirs()Z
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setReadable(ZZ)Z
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/File;->setExecutable(ZZ)Z
+    :try_end_15
+    .catchall {:try_start_1 .. :try_end_15} :catchall_17
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_17
+    move-exception v1
+
+    monitor-exit p0
+
+    throw v1
+.end method
+
+.method private deleteRecursive(Ljava/io/File;)V
+    .registers 7
+
+    invoke-virtual {p1}, Ljava/io/File;->isDirectory()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_16
+
+    invoke-virtual {p1}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v0
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_c
+    if-ge v2, v3, :cond_16
+
+    aget-object v1, v0, v2
+
+    invoke-direct {p0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_c
+
+    :cond_16
+    invoke-virtual {p1}, Ljava/io/File;->delete()Z
+
+    return-void
+.end method
+
+.method private getDbVersion()I
+    .registers 9
+
+    const/4 v4, 0x1
+
+    const/4 v3, -0x1
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    add-int/lit8 v6, v6, 0x1
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v1
+
+    :try_start_16
+    const-string v6, "SELECT name FROM sqlite_master WHERE type=\'table\' AND name=\'map\';"
+
+    invoke-direct {p0, v1, v6}, Landroid/privacy/PrivacyPersistenceAdapter;->rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_5e
+
+    invoke-interface {v0}, Landroid/database/Cursor;->getCount()I
+
+    move-result v6
+
+    if-nez v6, :cond_25
+
+    const/4 v3, 0x1
+
+    :cond_25
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    sget-object v7, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v7
+    :try_end_2b
+    .catch Ljava/lang/Exception; {:try_start_16 .. :try_end_2b} :catch_55
+
+    :try_start_2b
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    add-int/lit8 v6, v6, -0x1
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_4e
+
+    if-eqz v1, :cond_4e
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_4e
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_4e
+    monitor-exit v7
+
+    :goto_4f
+    if-ne v3, v4, :cond_66
+
+    :goto_51
+    return v3
+
+    :catchall_52
+    move-exception v6
+
+    monitor-exit v7
+    :try_end_54
+    .catchall {:try_start_2b .. :try_end_54} :catchall_52
+
+    :try_start_54
+    throw v6
+    :try_end_55
+    .catch Ljava/lang/Exception; {:try_start_54 .. :try_end_55} :catch_55
+
+    :catch_55
+    move-exception v2
+
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v7, "getDbVersion - failed to check if table map exists (exception)"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_4f
+
+    :cond_5e
+    :try_start_5e
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v7, "getDbVersion - failed to check if table map exists (cursor is null)"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_65
+    .catch Ljava/lang/Exception; {:try_start_5e .. :try_end_65} :catch_55
+
+    goto :goto_4f
+
+    :cond_66
+    const-string v6, "db_version"
+
+    invoke-virtual {p0, v6}, Landroid/privacy/PrivacyPersistenceAdapter;->getValue(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v5
+
+    if-nez v5, :cond_70
+
+    move v3, v4
+
+    goto :goto_51
+
+    :cond_70
+    :try_start_70
+    invoke-static {v5}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+    :try_end_73
+    .catch Ljava/lang/Exception; {:try_start_70 .. :try_end_73} :catch_76
+
+    move-result v4
+
+    move v3, v4
+
+    goto :goto_51
+
+    :catch_76
+    move-exception v2
+
+    const-string v6, "PrivacyPersistenceAdapter"
+
+    const-string v7, "getDbVersion - failed to parse database version; returning 1"
+
+    invoke-static {v6, v7}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v3, v4
+
+    goto :goto_51
+.end method
+
+.method private declared-synchronized getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_11
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_11
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_f
+    .catchall {:try_start_1 .. :try_end_f} :catchall_1e
+
+    :goto_f
+    monitor-exit p0
+
+    return-object v0
+
+    :cond_11
+    :try_start_11
+    const-string v0, "/data/system/privacy.db"
+
+    const/4 v1, 0x0
+
+    const/4 v2, 0x1
+
+    invoke-static {v0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_1d
+    .catchall {:try_start_11 .. :try_end_1d} :catchall_1e
+
+    goto :goto_f
+
+    :catchall_1e
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method private declared-synchronized getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v0, Ljava/io/File;
+
+    const-string v1, "/data/system/privacy.db"
+
+    invoke-direct {v0, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v0}, Ljava/io/File;->exists()Z
+
+    move-result v0
+
+    if-nez v0, :cond_11
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->createDatabase()V
+
+    :cond_11
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    if-eqz v0, :cond_29
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_29
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isReadOnly()Z
+
+    move-result v0
+
+    if-nez v0, :cond_29
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_27
+    .catchall {:try_start_1 .. :try_end_27} :catchall_36
+
+    :goto_27
+    monitor-exit p0
+
+    return-object v0
+
+    :cond_29
+    :try_start_29
+    const-string v0, "/data/system/privacy.db"
+
+    const/4 v1, 0x0
+
+    const/4 v2, 0x0
+
+    invoke-static {v0, v1, v2}, Landroid/database/sqlite/SQLiteDatabase;->openDatabase(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    iput-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+
+    iget-object v0, p0, Landroid/privacy/PrivacyPersistenceAdapter;->db:Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_35
+    .catchall {:try_start_29 .. :try_end_35} :catchall_36
+
+    goto :goto_27
+
+    :catchall_36
+    move-exception v0
+
+    monitor-exit p0
+
+    throw v0
+.end method
+
+.method private query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 16
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_27
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_27
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    invoke-virtual/range {p1 .. p9}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_10
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_10} :catch_15
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_12
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_15
+    move-exception v1
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_22
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_22
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_22
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_12
+
+    :cond_27
+    if-nez v3, :cond_32
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_32
+    return-object v0
+.end method
+
+.method private rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v0, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_3
+    if-nez v3, :cond_28
+
+    const/4 v4, 0x5
+
+    if-ge v2, v4, :cond_28
+
+    if-eqz v0, :cond_d
+
+    :try_start_a
+    invoke-interface {v0}, Landroid/database/Cursor;->close()V
+
+    :cond_d
+    const/4 v4, 0x0
+
+    invoke-virtual {p1, p2, v4}, Landroid/database/sqlite/SQLiteDatabase;->rawQuery(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;
+    :try_end_11
+    .catch Ljava/lang/IllegalStateException; {:try_start_a .. :try_end_11} :catch_16
+
+    move-result-object v0
+
+    const/4 v3, 0x1
+
+    :goto_13
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_3
+
+    :catch_16
+    move-exception v1
+
+    const/4 v3, 0x0
+
+    if-eqz p1, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_23
+
+    invoke-virtual {p1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_23
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object p1
+
+    goto :goto_13
+
+    :cond_28
+    if-nez v3, :cond_33
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "query - failed to execute query on the DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_33
+    return-object v0
+.end method
+
+.method private declared-synchronized upgradeDatabase(I)V
+    .registers 23
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    new-instance v18, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v19, "upgradeDatabase - upgrading DB from version "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    move-object/from16 v0, v18
+
+    move/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const-string v19, " to "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const/16 v19, 0x4
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v18
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v6, Ljava/io/File;
+
+    const-string v17, "/data/system/privacy.db"
+
+    move-object/from16 v0, v17
+
+    invoke-direct {v6, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v5, Ljava/io/File;
+
+    const-string v17, "/data/system/privacy.db.bak"
+
+    move-object/from16 v0, v17
+
+    invoke-direct {v5, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+    :try_end_3c
+    .catchall {:try_start_1 .. :try_end_3c} :catchall_66
+
+    :try_start_3c
+    invoke-virtual {v5}, Ljava/io/File;->delete()Z
+    :try_end_3f
+    .catchall {:try_start_3c .. :try_end_3f} :catchall_66
+    .catch Ljava/lang/SecurityException; {:try_start_3c .. :try_end_3f} :catch_5c
+
+    :goto_3f
+    :try_start_3f
+    invoke-static {v6, v5}, Landroid/os/FileUtils;->copyFile(Ljava/io/File;Ljava/io/File;)Z
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v17
+
+    invoke-virtual {v5}, Ljava/io/File;->lastModified()J
+
+    move-result-wide v19
+
+    sub-long v17, v17, v19
+
+    const-wide/16 v19, 0x7d0
+
+    cmp-long v17, v17, v19
+
+    if-lez v17, :cond_69
+
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v18, "upgradeDatabase - could not create a database backup, aborting..."
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_5a
+    .catchall {:try_start_3f .. :try_end_5a} :catchall_66
+
+    :goto_5a
+    monitor-exit p0
+
+    return-void
+
+    :catch_5c
+    move-exception v7
+
+    :try_start_5d
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v18, "upgradeDatabase - could not remove old backup"
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_65
+    .catchall {:try_start_5d .. :try_end_65} :catchall_66
+
+    goto :goto_3f
+
+    :catchall_66
+    move-exception v17
+
+    monitor-exit p0
+
+    throw v17
+
+    :cond_69
+    :try_start_69
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+
+    packed-switch p1, :pswitch_data_164
+
+    :cond_73
+    :goto_73
+    if-eqz v4, :cond_159
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v17
+
+    if-eqz v17, :cond_159
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :goto_81
+    invoke-virtual/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->purgeSettings()Z
+    :try_end_84
+    .catchall {:try_start_69 .. :try_end_84} :catchall_66
+
+    goto :goto_5a
+
+    :pswitch_85
+    if-eqz v4, :cond_73
+
+    :try_start_87
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v17
+
+    if-eqz v17, :cond_73
+
+    const-string v17, "DROP TABLE IF EXISTS version;"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v17, "CREATE TABLE IF NOT EXISTS allowed_contacts ( settings_id, contact_id, PRIMARY KEY(settings_id, contact_id) );"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v17, "CREATE TABLE IF NOT EXISTS map ( name TEXT PRIMARY KEY, value TEXT );"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v17, "INSERT OR REPLACE INTO map (name, value) VALUES (\"db_version\", 4);"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v17, "INSERT OR REPLACE INTO map (name, value) VALUES (\"enabled\", \"1\");"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    const-string v17, "INSERT OR REPLACE INTO map (name, value) VALUES (\"notifications_enabled\", \"1\");"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v4, v0}, Landroid/database/sqlite/SQLiteDatabase;->execSQL(Ljava/lang/String;)V
+
+    new-instance v14, Ljava/io/File;
+
+    const-string v17, "/data/system/privacy"
+
+    move-object/from16 v0, v17
+
+    invoke-direct {v14, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v14}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v2
+
+    array-length v10, v2
+
+    const/4 v8, 0x0
+
+    move v9, v8
+
+    :goto_c7
+    if-ge v9, v10, :cond_127
+
+    aget-object v13, v2, v9
+
+    invoke-virtual {v13}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v3
+
+    array-length v11, v3
+
+    const/4 v8, 0x0
+
+    :goto_d1
+    if-ge v8, v11, :cond_123
+
+    aget-object v16, v3, v8
+
+    invoke-virtual/range {v16 .. v16}, Ljava/io/File;->isDirectory()Z
+
+    move-result v17
+
+    if-eqz v17, :cond_120
+
+    invoke-virtual/range {v16 .. v16}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v15
+
+    const/16 v17, 0x0
+
+    aget-object v17, v15, v17
+
+    if-eqz v17, :cond_120
+
+    new-instance v12, Ljava/io/File;
+
+    new-instance v17, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v17
+
+    const-string v18, "/"
+
+    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v17
+
+    const/16 v18, 0x0
+
+    aget-object v18, v15, v18
+
+    invoke-virtual/range {v18 .. v18}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v18
+
+    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v17
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v17
+
+    move-object/from16 v0, v17
+
+    invoke-direct {v12, v0}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v12}, Ljava/io/File;->delete()Z
+
+    const/16 v17, 0x0
+
+    aget-object v17, v15, v17
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v12}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v16
+
+    invoke-direct {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    :cond_120
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_d1
+
+    :cond_123
+    add-int/lit8 v8, v9, 0x1
+
+    move v9, v8
+
+    goto :goto_c7
+
+    :cond_127
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_12a
+    .catchall {:try_start_87 .. :try_end_12a} :catchall_66
+    .catch Ljava/lang/Exception; {:try_start_87 .. :try_end_12a} :catch_12c
+
+    goto/16 :goto_73
+
+    :catch_12c
+    move-exception v7
+
+    if-eqz v4, :cond_13b
+
+    :try_start_12f
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v17
+
+    if-eqz v17, :cond_13b
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    invoke-virtual {v4}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_13b
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v18, "upgradeDatabase - could not upgrade DB; will restore backup"
+
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, v18
+
+    invoke-static {v0, v1, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-static {v5, v6}, Landroid/os/FileUtils;->copyFile(Ljava/io/File;Ljava/io/File;)Z
+
+    invoke-virtual {v5}, Ljava/io/File;->delete()Z
+
+    goto/16 :goto_73
+
+    :pswitch_14f
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v18, "upgradeDatabase - trying to upgrade most current DB version"
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_73
+
+    :cond_159
+    const-string v17, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v18, "upgradeDatabase - database is null or closed; cant call endTransaction()"
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_161
+    .catchall {:try_start_12f .. :try_end_161} :catchall_66
+
+    goto/16 :goto_81
+
+    nop
+
+    :pswitch_data_164
+    .packed-switch 0x1
+        :pswitch_85
+        :pswitch_85
+        :pswitch_85
+        :pswitch_14f
+    .end packed-switch
+.end method
+
+.method private writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+    .registers 11
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Ljava/lang/Exception;
+        }
+    .end annotation
+
+    const/4 v6, 0x1
+
+    new-instance v1, Ljava/io/File;
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "/data/system/privacy/"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "/"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-direct {v1, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/io/File;
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "/data/system/privacy/"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "/"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "/"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-direct {v2, v4}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    :try_start_47
+    invoke-virtual {v1}, Ljava/io/File;->mkdirs()Z
+
+    const/4 v4, 0x1
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v1, v4, v5}, Ljava/io/File;->setReadable(ZZ)Z
+
+    const/4 v4, 0x1
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v1, v4, v5}, Ljava/io/File;->setExecutable(ZZ)Z
+
+    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z
+
+    const/4 v4, 0x1
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v2, v4, v5}, Ljava/io/File;->setReadable(ZZ)Z
+
+    new-instance v3, Ljava/io/OutputStreamWriter;
+
+    new-instance v4, Ljava/io/FileOutputStream;
+
+    invoke-direct {v4, v2}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
+
+    invoke-direct {v3, v4}, Ljava/io/OutputStreamWriter;-><init>(Ljava/io/OutputStream;)V
+
+    const-string/jumbo v4, "systemLogsSetting"
+
+    invoke-virtual {p1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_90
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {p3}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, ""
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/io/OutputStreamWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+
+    :cond_89
+    :goto_89
+    invoke-virtual {v3}, Ljava/io/OutputStreamWriter;->flush()V
+
+    invoke-virtual {v3}, Ljava/io/OutputStreamWriter;->close()V
+
+    return v6
+
+    :cond_90
+    const-string v4, "ipTableProtectSetting"
+
+    invoke-virtual {p1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_89
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {p3}, Landroid/privacy/PrivacySettings;->getIpTableProtectSetting()B
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, ""
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/io/OutputStreamWriter;->append(Ljava/lang/CharSequence;)Ljava/io/Writer;
+    :try_end_b2
+    .catch Ljava/io/IOException; {:try_start_47 .. :try_end_b2} :catch_b3
+
+    goto :goto_89
+
+    :catch_b3
+    move-exception v0
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - could not write settings to file"
+
+    invoke-direct {v4, v5, v0}, Ljava/lang/Exception;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+
+    throw v4
+.end method
+
+
+# virtual methods
+.method public declared-synchronized deleteSettings(Ljava/lang/String;)Z
+    .registers 16
+
+    monitor-enter p0
+
+    const/4 v11, 0x1
+
+    :try_start_2
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_9
+    .catchall {:try_start_2 .. :try_end_9} :catchall_107
+
+    :try_start_9
+    const-string/jumbo v1, "settings"
+
+    const/4 v2, 0x1
+
+    new-array v2, v2, [Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    const-string v4, "_id"
+
+    aput-object v4, v2, v3
+
+    const-string/jumbo v3, "packageName=?"
+
+    const/4 v4, 0x1
+
+    new-array v4, v4, [Ljava/lang/String;
+
+    const/4 v5, 0x0
+
+    aput-object p1, v4, v5
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v0 .. v7}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_4c
+
+    invoke-interface {v8}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-lez v1, :cond_4c
+
+    invoke-interface {v8}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_4c
+
+    const/4 v1, 0x0
+
+    invoke-interface {v8, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v10
+
+    const-string v1, "allowed_contacts"
+
+    const-string/jumbo v2, "settings_id=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-static {v10}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-interface {v8}, Landroid/database/Cursor;->close()V
+
+    :cond_4c
+    const-string/jumbo v1, "settings"
+
+    const-string/jumbo v2, "packageName=?"
+
+    const/4 v3, 0x1
+
+    new-array v3, v3, [Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    aput-object p1, v3, v4
+
+    invoke-virtual {v0, v1, v2, v3}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v1
+
+    if-nez v1, :cond_8d
+
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "deleteSettings - database entry for "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " not found"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_7c
+    .catchall {:try_start_9 .. :try_end_7c} :catchall_10a
+    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_7c} :catch_ef
+
+    const/4 v1, 0x0
+
+    :try_start_7d
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_8b
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_8b
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_8b
+    .catchall {:try_start_7d .. :try_end_8b} :catchall_107
+
+    :cond_8b
+    :goto_8b
+    monitor-exit p0
+
+    return v1
+
+    :cond_8d
+    :try_start_8d
+    new-instance v12, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v12, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    new-instance v13, Ljava/io/File;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "/data/system/privacy/"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "/systemLogsSetting"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v13, v1}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v13}, Ljava/io/File;->delete()Z
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_d9
+
+    invoke-virtual {v12}, Ljava/io/File;->list()[Ljava/lang/String;
+
+    move-result-object v1
+
+    array-length v1, v1
+
+    if-nez v1, :cond_dc
+
+    :cond_d9
+    invoke-virtual {v12}, Ljava/io/File;->delete()Z
+
+    :cond_dc
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_df
+    .catchall {:try_start_8d .. :try_end_df} :catchall_10a
+    .catch Ljava/lang/Exception; {:try_start_8d .. :try_end_df} :catch_ef
+
+    :try_start_df
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_ed
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ed
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_ed
+    .catchall {:try_start_df .. :try_end_ed} :catchall_107
+
+    :cond_ed
+    :goto_ed
+    move v1, v11
+
+    goto :goto_8b
+
+    :catch_ef
+    move-exception v9
+
+    const/4 v11, 0x0
+
+    :try_start_f1
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v2, "deleteSettings - could not delete settings"
+
+    invoke-static {v1, v2, v9}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_f8
+    .catchall {:try_start_f1 .. :try_end_f8} :catchall_10a
+
+    :try_start_f8
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_ed
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ed
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_106
+    .catchall {:try_start_f8 .. :try_end_106} :catchall_107
+
+    goto :goto_ed
+
+    :catchall_107
+    move-exception v1
+
+    monitor-exit p0
+
+    throw v1
+
+    :catchall_10a
+    move-exception v1
+
+    :try_start_10b
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v0, :cond_119
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_119
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_119
+    throw v1
+    :try_end_11a
+    .catchall {:try_start_10b .. :try_end_11a} :catchall_107
+.end method
+
+.method public declared-synchronized getSettings(Ljava/lang/String;Z)Landroid/privacy/PrivacySettings;
+    .registers 59
+
+    monitor-enter p0
+
+    const/16 v55, 0x0
+
+    if-nez p1, :cond_10
+
+    :try_start_5
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v4, "getSettings - insufficient application identifier - package name is required"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_c
+    .catchall {:try_start_5 .. :try_end_c} :catchall_359
+
+    move-object/from16 v3, v55
+
+    :goto_e
+    monitor-exit p0
+
+    return-object v55
+
+    :cond_10
+    :try_start_10
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+    :try_end_20
+    .catchall {:try_start_10 .. :try_end_20} :catchall_359
+
+    :try_start_20
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+    :try_end_23
+    .catchall {:try_start_20 .. :try_end_23} :catchall_359
+    .catch Landroid/database/sqlite/SQLiteException; {:try_start_20 .. :try_end_23} :catch_2c6
+
+    move-result-object v2
+
+    const/16 v53, 0x0
+
+    :try_start_26
+    const-string/jumbo v3, "settings"
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->DATABASE_FIELDS:[Ljava/lang/String;
+
+    const-string/jumbo v5, "packageName=?"
+
+    const/4 v1, 0x1
+
+    new-array v6, v1, [Ljava/lang/String;
+
+    const/4 v1, 0x0
+
+    aput-object p1, v6, v1
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    move-object/from16 v1, p0
+
+    invoke-direct/range {v1 .. v10}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v53
+
+    if-eqz v53, :cond_35d
+
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_35d
+
+    new-instance v3, Landroid/privacy/PrivacySettings;
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    const/4 v1, 0x1
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v1, 0x2
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v6
+
+    const/4 v1, 0x3
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v7, v1
+
+    const/4 v1, 0x4
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v8
+
+    const/4 v1, 0x5
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v9, v1
+
+    const/4 v1, 0x6
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v10
+
+    const/4 v1, 0x7
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v11, v1
+
+    const/16 v1, 0x8
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    const/16 v1, 0x9
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v13
+
+    const/16 v1, 0xa
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v14, v1
+
+    const/16 v1, 0xb
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v15
+
+    const/16 v1, 0xc
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v16
+
+    const/16 v1, 0xd
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v17, v0
+
+    const/16 v1, 0xe
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v18, v0
+
+    const/16 v1, 0xf
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v19, v0
+
+    const/16 v1, 0x10
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v20
+
+    const/16 v1, 0x11
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v21, v0
+
+    const/16 v1, 0x12
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v22
+
+    const/16 v1, 0x13
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v23, v0
+
+    const/16 v1, 0x14
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v24, v0
+
+    const/16 v1, 0x15
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v25, v0
+
+    const/16 v1, 0x16
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v26, v0
+
+    const/16 v1, 0x17
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v27, v0
+
+    const/16 v1, 0x18
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v28, v0
+
+    const/16 v1, 0x19
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v29, v0
+
+    const/16 v1, 0x1a
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v30, v0
+
+    const/16 v1, 0x1b
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v31, v0
+
+    const/16 v1, 0x1c
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v32, v0
+
+    const/16 v1, 0x1d
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v33, v0
+
+    const/16 v1, 0x1e
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v34, v0
+
+    const/16 v1, 0x1f
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v35, v0
+
+    const/16 v1, 0x20
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v36, v0
+
+    const/16 v1, 0x21
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v37, v0
+
+    const/16 v1, 0x22
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v38, v0
+
+    const/16 v39, 0x0
+
+    const/16 v1, 0x23
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v40, v0
+
+    const/16 v1, 0x24
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v41, v0
+
+    const/16 v1, 0x25
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v42, v0
+
+    const/16 v1, 0x26
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v43, v0
+
+    const/16 v1, 0x27
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v44, v0
+
+    const/16 v1, 0x28
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v45, v0
+
+    const/16 v1, 0x29
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v46
+
+    const/16 v1, 0x2a
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v47, v0
+
+    const/16 v1, 0x2b
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v48, v0
+
+    const/16 v1, 0x2c
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v49, v0
+
+    const/16 v1, 0x2d
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v50, v0
+
+    const/16 v1, 0x2e
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getShort(I)S
+
+    move-result v1
+
+    int-to-byte v0, v1
+
+    move/from16 v51, v0
+
+    invoke-direct/range {v3 .. v51}, Landroid/privacy/PrivacySettings;-><init>(Ljava/lang/Integer;Ljava/lang/String;IBLjava/lang/String;BLjava/lang/String;BLjava/lang/String;Ljava/lang/String;BLjava/lang/String;Ljava/lang/String;BBBLjava/lang/String;BLjava/lang/String;BBBBBBBBBBBBBBBB[IBBBBBBLjava/lang/String;BBBBB)V
+    :try_end_222
+    .catchall {:try_start_26 .. :try_end_222} :catchall_31c
+    .catch Ljava/lang/Exception; {:try_start_26 .. :try_end_222} :catch_354
+
+    :try_start_222
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "SELECT * FROM allowed_contacts WHERE settings_id="
+
+    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v3}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v4, ";"
+
+    invoke-virtual {v1, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->rawQuery(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v53
+
+    if-eqz v53, :cond_2e9
+
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-lez v1, :cond_2e9
+
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    new-array v0, v1, [I
+
+    move-object/from16 v52, v0
+
+    :goto_25d
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_2e4
+
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    move-object/from16 v0, v53
+
+    invoke-interface {v0, v4}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v4
+
+    aput v4, v52, v1
+    :try_end_270
+    .catchall {:try_start_222 .. :try_end_270} :catchall_352
+    .catch Ljava/lang/Exception; {:try_start_222 .. :try_end_270} :catch_271
+
+    goto :goto_25d
+
+    :catch_271
+    move-exception v54
+
+    :goto_272
+    :try_start_272
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "getSettings - failed to get settings for package: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    move-object/from16 v0, v54
+
+    invoke-static {v1, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-virtual/range {v54 .. v54}, Ljava/lang/Exception;->printStackTrace()V
+
+    if-eqz v53, :cond_296
+
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->close()V
+    :try_end_296
+    .catchall {:try_start_272 .. :try_end_296} :catchall_352
+
+    :cond_296
+    if-eqz v53, :cond_29b
+
+    :try_start_298
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->close()V
+
+    :cond_29b
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_29e
+    .catchall {:try_start_298 .. :try_end_29e} :catchall_319
+
+    :try_start_29e
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, -0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    if-nez v1, :cond_2c1
+
+    if-eqz v2, :cond_2c1
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_2c1
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_2c1
+    monitor-exit v4
+    :try_end_2c2
+    .catchall {:try_start_29e .. :try_end_2c2} :catchall_34f
+
+    :goto_2c2
+    move-object/from16 v55, v3
+
+    goto/16 :goto_e
+
+    :catch_2c6
+    move-exception v54
+
+    :try_start_2c7
+    const-string v1, "PrivacyPersistenceAdapter"
+
+    const-string v4, "getSettings - database could not be opened"
+
+    move-object/from16 v0, v54
+
+    invoke-static {v1, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, -0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+    :try_end_2e0
+    .catchall {:try_start_2c7 .. :try_end_2e0} :catchall_359
+
+    move-object/from16 v3, v55
+
+    goto/16 :goto_e
+
+    :cond_2e4
+    :try_start_2e4
+    move-object/from16 v0, v52
+
+    invoke-virtual {v3, v0}, Landroid/privacy/PrivacySettings;->setAllowedContacts([I)V
+    :try_end_2e9
+    .catchall {:try_start_2e4 .. :try_end_2e9} :catchall_352
+    .catch Ljava/lang/Exception; {:try_start_2e4 .. :try_end_2e9} :catch_271
+
+    :cond_2e9
+    :goto_2e9
+    if-eqz v53, :cond_2ee
+
+    :try_start_2eb
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->close()V
+
+    :cond_2ee
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_2f1
+    .catchall {:try_start_2eb .. :try_end_2f1} :catchall_319
+
+    :try_start_2f1
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    add-int/lit8 v1, v1, -0x1
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v1
+
+    sput-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v1, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I
+
+    move-result v1
+
+    if-nez v1, :cond_314
+
+    if-eqz v2, :cond_314
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_314
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_314
+    monitor-exit v4
+
+    goto :goto_2c2
+
+    :catchall_316
+    move-exception v1
+
+    monitor-exit v4
+    :try_end_318
+    .catchall {:try_start_2f1 .. :try_end_318} :catchall_316
+
+    :try_start_318
+    throw v1
+    :try_end_319
+    .catchall {:try_start_318 .. :try_end_319} :catchall_319
+
+    :catchall_319
+    move-exception v1
+
+    :goto_31a
+    monitor-exit p0
+
+    throw v1
+
+    :catchall_31c
+    move-exception v1
+
+    move-object/from16 v3, v55
+
+    :goto_31f
+    if-eqz v53, :cond_324
+
+    :try_start_321
+    invoke-interface/range {v53 .. v53}, Landroid/database/Cursor;->close()V
+
+    :cond_324
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+    :try_end_327
+    .catchall {:try_start_321 .. :try_end_327} :catchall_319
+
+    :try_start_327
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    add-int/lit8 v5, v5, -0x1
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    sput-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    if-nez v5, :cond_34a
+
+    if-eqz v2, :cond_34a
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_34a
+
+    invoke-virtual {v2}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_34a
+    monitor-exit v4
+    :try_end_34b
+    .catchall {:try_start_327 .. :try_end_34b} :catchall_34c
+
+    :try_start_34b
+    throw v1
+    :try_end_34c
+    .catchall {:try_start_34b .. :try_end_34c} :catchall_319
+
+    :catchall_34c
+    move-exception v1
+
+    :try_start_34d
+    monitor-exit v4
+    :try_end_34e
+    .catchall {:try_start_34d .. :try_end_34e} :catchall_34c
+
+    :try_start_34e
+    throw v1
+    :try_end_34f
+    .catchall {:try_start_34e .. :try_end_34f} :catchall_319
+
+    :catchall_34f
+    move-exception v1
+
+    :try_start_350
+    monitor-exit v4
+    :try_end_351
+    .catchall {:try_start_350 .. :try_end_351} :catchall_34f
+
+    :try_start_351
+    throw v1
+    :try_end_352
+    .catchall {:try_start_351 .. :try_end_352} :catchall_319
+
+    :catchall_352
+    move-exception v1
+
+    goto :goto_31f
+
+    :catch_354
+    move-exception v54
+
+    move-object/from16 v3, v55
+
+    goto/16 :goto_272
+
+    :catchall_359
+    move-exception v1
+
+    move-object/from16 v3, v55
+
+    goto :goto_31a
+
+    :cond_35d
+    move-object/from16 v3, v55
+
+    goto :goto_2e9
+.end method
+
+.method public getValue(Ljava/lang/String;)Ljava/lang/String;
+    .registers 15
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    add-int/lit8 v0, v0, 0x1
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v1
+
+    const/4 v12, 0x0
+
+    :try_start_15
+    const-string/jumbo v2, "map"
+
+    const/4 v0, 0x1
+
+    new-array v3, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    const-string/jumbo v4, "value"
+
+    aput-object v4, v3, v0
+
+    const-string/jumbo v4, "name=?"
+
+    const/4 v0, 0x1
+
+    new-array v5, v0, [Ljava/lang/String;
+
+    const/4 v0, 0x0
+
+    aput-object p1, v5, v0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v9}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_77
+
+    invoke-interface {v10}, Landroid/database/Cursor;->getCount()I
+
+    move-result v0
+
+    if-lez v0, :cond_77
+
+    invoke-interface {v10}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_77
+
+    const-string/jumbo v0, "value"
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getColumnIndex(Ljava/lang/String;)I
+
+    move-result v0
+
+    invoke-interface {v10, v0}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-interface {v10}, Landroid/database/Cursor;->close()V
+    :try_end_4f
+    .catch Ljava/lang/Exception; {:try_start_15 .. :try_end_4f} :catch_90
+
+    :goto_4f
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v2
+
+    :try_start_52
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    add-int/lit8 v0, v0, -0x1
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    sput-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v0, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v0
+
+    if-nez v0, :cond_75
+
+    if-eqz v1, :cond_75
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_75
+
+    invoke-virtual {v1}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_75
+    monitor-exit v2
+    :try_end_76
+    .catchall {:try_start_52 .. :try_end_76} :catchall_aa
+
+    return-object v12
+
+    :cond_77
+    :try_start_77
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getValue - could not get value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_8f
+    .catch Ljava/lang/Exception; {:try_start_77 .. :try_end_8f} :catch_90
+
+    goto :goto_4f
+
+    :catch_90
+    move-exception v11
+
+    const-string v0, "PrivacyPersistenceAdapter"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "getValue - could not get value for name: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2, v11}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_4f
+
+    :catchall_aa
+    move-exception v0
+
+    :try_start_ab
+    monitor-exit v2
+    :try_end_ac
+    .catchall {:try_start_ab .. :try_end_ac} :catchall_aa
+
+    throw v0
+.end method
+
+.method public purgeSettings()Z
+    .registers 28
+
+    const/16 v25, 0x1
+
+    new-instance v13, Ljava/util/ArrayList;
+
+    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Landroid/privacy/PrivacyPersistenceAdapter;->context:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v21
+
+    const/16 v2, 0x80
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v2}, Landroid/content/pm/PackageManager;->getInstalledApplications(I)Ljava/util/List;
+
+    move-result-object v19
+
+    invoke-interface/range {v19 .. v19}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v18
+
+    :goto_1b
+    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2d
+
+    invoke-interface/range {v18 .. v18}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v13, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    goto :goto_1b
+
+    :cond_2d
+    new-instance v26, Ljava/io/File;
+
+    const-string v2, "/data/system/privacy"
+
+    move-object/from16 v0, v26
+
+    invoke-direct {v0, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual/range {v26 .. v26}, Ljava/io/File;->listFiles()[Ljava/io/File;
+
+    move-result-object v15
+
+    array-length v0, v15
+
+    move/from16 v20, v0
+
+    const/16 v18, 0x0
+
+    :goto_3f
+    move/from16 v0, v18
+
+    move/from16 v1, v20
+
+    if-ge v0, v1, :cond_5d
+
+    aget-object v23, v15, v18
+
+    invoke-virtual/range {v23 .. v23}, Ljava/io/File;->getName()Ljava/lang/String;
+
+    move-result-object v24
+
+    move-object/from16 v0, v24
+
+    invoke-interface {v13, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_5a
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-direct {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteRecursive(Ljava/io/File;)V
+
+    :cond_5a
+    add-int/lit8 v18, v18, 0x1
+
+    goto :goto_3f
+
+    :cond_5d
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    add-int/lit8 v2, v2, 0x1
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    sput-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v3
+
+    const/16 v16, 0x0
+
+    :try_start_73
+    const-string/jumbo v4, "settings"
+
+    const/4 v2, 0x1
+
+    new-array v5, v2, [Ljava/lang/String;
+
+    const/4 v2, 0x0
+
+    const-string/jumbo v6, "packageName"
+
+    aput-object v6, v5, v2
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    move-object/from16 v2, p0
+
+    invoke-direct/range {v2 .. v11}, Landroid/privacy/PrivacyPersistenceAdapter;->query(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v16
+
+    new-instance v14, Ljava/util/ArrayList;
+
+    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V
+
+    :goto_90
+    invoke-interface/range {v16 .. v16}, Landroid/database/Cursor;->moveToNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_142
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v16
+
+    invoke-interface {v0, v2}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v24
+
+    move-object/from16 v0, v24
+
+    invoke-interface {v13, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_e7
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteSettings(Ljava/lang/String;)Z
+    :try_end_ac
+    .catchall {:try_start_73 .. :try_end_ac} :catchall_107
+    .catch Ljava/lang/Exception; {:try_start_73 .. :try_end_ac} :catch_ad
+
+    goto :goto_90
+
+    :catch_ad
+    move-exception v17
+
+    :try_start_ae
+    const-string v2, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v4, "purgeSettings - purging DB failed"
+
+    move-object/from16 v0, v17
+
+    invoke-static {v2, v4, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_b8
+    .catchall {:try_start_ae .. :try_end_b8} :catchall_107
+
+    const/16 v25, 0x0
+
+    if-eqz v16, :cond_bf
+
+    invoke-interface/range {v16 .. v16}, Landroid/database/Cursor;->close()V
+
+    :cond_bf
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+
+    :try_start_c2
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    add-int/lit8 v2, v2, -0x1
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    sput-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    if-nez v2, :cond_e5
+
+    if-eqz v3, :cond_e5
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_e5
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_e5
+    monitor-exit v4
+    :try_end_e6
+    .catchall {:try_start_c2 .. :try_end_e6} :catchall_13f
+
+    :goto_e6
+    return v25
+
+    :cond_e7
+    :try_start_e7
+    move-object/from16 v0, v24
+
+    invoke-interface {v14, v0}, Ljava/util/List;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_135
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v0, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->getSettings(Ljava/lang/String;Z)Landroid/privacy/PrivacySettings;
+
+    move-result-object v22
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->deleteSettings(Ljava/lang/String;)Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v22
+
+    invoke-virtual {v0, v1}, Landroid/privacy/PrivacyPersistenceAdapter;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+    :try_end_106
+    .catchall {:try_start_e7 .. :try_end_106} :catchall_107
+    .catch Ljava/lang/Exception; {:try_start_e7 .. :try_end_106} :catch_ad
+
+    goto :goto_90
+
+    :catchall_107
+    move-exception v2
+
+    if-eqz v16, :cond_10d
+
+    invoke-interface/range {v16 .. v16}, Landroid/database/Cursor;->close()V
+
+    :cond_10d
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+
+    :try_start_110
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    add-int/lit8 v5, v5, -0x1
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    sput-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I
+
+    move-result v5
+
+    if-nez v5, :cond_133
+
+    if-eqz v3, :cond_133
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_133
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_133
+    monitor-exit v4
+    :try_end_134
+    .catchall {:try_start_110 .. :try_end_134} :catchall_13c
+
+    throw v2
+
+    :cond_135
+    :try_start_135
+    move-object/from16 v0, v24
+
+    invoke-interface {v14, v0}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_13a
+    .catchall {:try_start_135 .. :try_end_13a} :catchall_107
+    .catch Ljava/lang/Exception; {:try_start_135 .. :try_end_13a} :catch_ad
+
+    goto/16 :goto_90
+
+    :catchall_13c
+    move-exception v2
+
+    :try_start_13d
+    monitor-exit v4
+    :try_end_13e
+    .catchall {:try_start_13d .. :try_end_13e} :catchall_13c
+
+    throw v2
+
+    :catchall_13f
+    move-exception v2
+
+    :try_start_140
+    monitor-exit v4
+    :try_end_141
+    .catchall {:try_start_140 .. :try_end_141} :catchall_13f
+
+    throw v2
+
+    :cond_142
+    if-eqz v16, :cond_147
+
+    invoke-interface/range {v16 .. v16}, Landroid/database/Cursor;->close()V
+
+    :cond_147
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v4
+
+    :try_start_14a
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    add-int/lit8 v2, v2, -0x1
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    sput-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v2, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    if-nez v2, :cond_16d
+
+    if-eqz v3, :cond_16d
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_16d
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_16d
+    monitor-exit v4
+
+    goto/16 :goto_e6
+
+    :catchall_170
+    move-exception v2
+
+    monitor-exit v4
+    :try_end_172
+    .catchall {:try_start_14a .. :try_end_172} :catchall_170
+
+    throw v2
+.end method
+
+.method public declared-synchronized saveSettings(Landroid/privacy/PrivacySettings;)Z
+    .registers 25
+
+    monitor-enter p0
+
+    const/16 v19, 0x1
+
+    :try_start_3
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v18
+
+    if-eqz v18, :cond_f
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_1a
+
+    :cond_f
+    const-string v4, "PrivacyPersistenceAdapter"
+
+    const-string/jumbo v5, "saveSettings - either package name, UID or both is missing"
+
+    invoke-static {v4, v5}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_17
+    .catchall {:try_start_3 .. :try_end_17} :catchall_399
+
+    const/4 v4, 0x0
+
+    :goto_18
+    monitor-exit p0
+
+    return v4
+
+    :cond_1a
+    :try_start_1a
+    new-instance v22, Landroid/content/ContentValues;
+
+    invoke-direct/range {v22 .. v22}, Landroid/content/ContentValues;-><init>()V
+
+    const-string/jumbo v4, "packageName"
+
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v4, v1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "uid"
+
+    const/4 v5, -0x1
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "deviceIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "deviceId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getDeviceId()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "line1NumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1NumberSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "line1Number"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLine1Number()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationGpsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "locationGpsLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLat()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationGpsLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationGpsLon()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationNetworkSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "locationNetworkLat"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLat()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "locationNetworkLon"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getLocationNetworkLon()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "networkInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNetworkInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simSerialNumberSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumberSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "simSerialNumber"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSimSerialNumber()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "subscriberIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "subscriberId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSubscriberId()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v4, "accountsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "accountsAuthTokensSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAccountsAuthTokensSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "outgoingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getOutgoingCallsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "incomingCallsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "contactsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "calendarSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCalendarSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "mmsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "smsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "callLogSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCallLogSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "bookmarksSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getBookmarksSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "systemLogsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSystemLogsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "notificationSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getNotificationSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "intentBootCompletedSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIntentBootCompletedSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "cameraSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getCameraSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "recordAudioSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getRecordAudioSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "smsSendSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSmsSendSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "phoneCallSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPhoneCallSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "ipTableProtectSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIpTableProtectSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "iccAccessSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getIccAccessSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "addOnManagementSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAddOnManagementSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "androidIdSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAndroidIdSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "androidId"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAndroidID()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v4, "wifiInfoSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getWifiInfoSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "switchConnectivitySetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSwitchConnectivitySetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "sendMmsSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSendMmsSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string v4, "forceOnlineState"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getForceOnlineState()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    const-string/jumbo v4, "switchWifiStateSetting"
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getSwitchWifiStateSetting()B
+
+    move-result v5
+
+    invoke-static {v5}, Ljava/lang/Byte;->valueOf(B)Ljava/lang/Byte;
+
+    move-result-object v5
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Byte;)V
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    add-int/lit8 v4, v4, 0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    sput-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-direct/range {p0 .. p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->beginTransaction()V
+    :try_end_2c0
+    .catchall {:try_start_1a .. :try_end_2c0} :catchall_399
+
+    const/4 v12, 0x0
+
+    :try_start_2c1
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->get_id()Ljava/lang/Integer;
+
+    move-result-object v16
+
+    if-eqz v16, :cond_39f
+
+    const-string/jumbo v4, "settings"
+
+    const-string v5, "_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v0, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ge v4, v5, :cond_31e
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_2e8
+    .catchall {:try_start_2c1 .. :try_end_2e8} :catchall_368
+    .catch Ljava/lang/Exception; {:try_start_2c1 .. :try_end_2e8} :catch_2e8
+
+    :catch_2e8
+    move-exception v14
+
+    const/16 v19, 0x0
+
+    :try_start_2eb
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v12, :cond_2f3
+
+    invoke-interface {v12}, Landroid/database/Cursor;->close()V
+
+    :cond_2f3
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+    :try_end_2f6
+    .catchall {:try_start_2eb .. :try_end_2f6} :catchall_399
+
+    :try_start_2f6
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    sput-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    if-nez v4, :cond_319
+
+    if-eqz v3, :cond_319
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_319
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_319
+    monitor-exit v5
+    :try_end_31a
+    .catchall {:try_start_2f6 .. :try_end_31a} :catchall_519
+
+    :goto_31a
+    move/from16 v4, v19
+
+    goto/16 :goto_18
+
+    :cond_31e
+    :try_start_31e
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4c9
+
+    new-instance v13, Landroid/content/ContentValues;
+
+    invoke-direct {v13}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_33c
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4c9
+
+    const-string/jumbo v4, "settings_id"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v13, v4, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v13, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v13}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_39c
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_368
+    .catchall {:try_start_31e .. :try_end_368} :catchall_368
+    .catch Ljava/lang/Exception; {:try_start_31e .. :try_end_368} :catch_2e8
+
+    :catchall_368
+    move-exception v4
+
+    :try_start_369
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v12, :cond_371
+
+    invoke-interface {v12}, Landroid/database/Cursor;->close()V
+
+    :cond_371
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+    :try_end_374
+    .catchall {:try_start_369 .. :try_end_374} :catchall_399
+
+    :try_start_374
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    add-int/lit8 v6, v6, -0x1
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    sput-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v6, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I
+
+    move-result v6
+
+    if-nez v6, :cond_397
+
+    if-eqz v3, :cond_397
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_397
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_397
+    monitor-exit v5
+    :try_end_398
+    .catchall {:try_start_374 .. :try_end_398} :catchall_51c
+
+    :try_start_398
+    throw v4
+    :try_end_399
+    .catchall {:try_start_398 .. :try_end_399} :catchall_399
+
+    :catchall_399
+    move-exception v4
+
+    monitor-exit p0
+
+    throw v4
+
+    :cond_39c
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_33c
+
+    :cond_39f
+    :try_start_39f
+    const-string/jumbo v4, "settings"
+
+    const/4 v5, 0x1
+
+    new-array v5, v5, [Ljava/lang/String;
+
+    const/4 v6, 0x0
+
+    const-string v7, "_id"
+
+    aput-object v7, v5, v6
+
+    const-string/jumbo v6, "packageName=?"
+
+    const/4 v7, 0x1
+
+    new-array v7, v7, [Ljava/lang/String;
+
+    const/4 v8, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v9
+
+    aput-object v9, v7, v8
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    invoke-virtual/range {v3 .. v10}, Landroid/database/sqlite/SQLiteDatabase;->query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;
+
+    move-result-object v12
+
+    if-eqz v12, :cond_4be
+
+    invoke-interface {v12}, Landroid/database/Cursor;->getCount()I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ne v4, v5, :cond_445
+
+    const-string/jumbo v4, "settings"
+
+    const-string/jumbo v5, "packageName=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getPackageName()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v0, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ge v4, v5, :cond_3e9
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_3e9
+    invoke-interface {v12}, Landroid/database/Cursor;->moveToFirst()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_4c9
+
+    const/4 v4, 0x0
+
+    invoke-interface {v12, v4}, Landroid/database/Cursor;->getInt(I)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v17
+
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/Integer;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4c9
+
+    new-instance v13, Landroid/content/ContentValues;
+
+    invoke-direct {v13}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_416
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4c9
+
+    const-string/jumbo v4, "settings_id"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v13, v4, v0}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v13, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v13}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_442
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_442
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_416
+
+    :cond_445
+    invoke-interface {v12}, Landroid/database/Cursor;->getCount()I
+
+    move-result v4
+
+    if-nez v4, :cond_4b3
+
+    const-string/jumbo v4, "settings"
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v3, v4, v5, v0}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v20
+
+    const-wide/16 v4, -0x1
+
+    cmp-long v4, v20, v4
+
+    if-nez v4, :cond_464
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to insert new record into DB"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_464
+    const-string v4, "allowed_contacts"
+
+    const-string/jumbo v5, "settings_id=?"
+
+    const/4 v6, 0x1
+
+    new-array v6, v6, [Ljava/lang/String;
+
+    const/4 v7, 0x0
+
+    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->toString(J)Ljava/lang/String;
+
+    move-result-object v8
+
+    aput-object v8, v6, v7
+
+    invoke-virtual {v3, v4, v5, v6}, Landroid/database/sqlite/SQLiteDatabase;->delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I
+
+    invoke-virtual/range {p1 .. p1}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v11
+
+    if-eqz v11, :cond_4c9
+
+    new-instance v13, Landroid/content/ContentValues;
+
+    invoke-direct {v13}, Landroid/content/ContentValues;-><init>()V
+
+    const/4 v15, 0x0
+
+    :goto_482
+    array-length v4, v11
+
+    if-ge v15, v4, :cond_4c9
+
+    const-string/jumbo v4, "settings_id"
+
+    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v5
+
+    invoke-virtual {v13, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Long;)V
+
+    const-string v4, "contact_id"
+
+    aget v5, v11, v15
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    invoke-virtual {v13, v4, v5}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/Integer;)V
+
+    const-string v4, "allowed_contacts"
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v4, v5, v13}, Landroid/database/sqlite/SQLiteDatabase;->insert(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v4
+
+    const-wide/16 v6, -0x1
+
+    cmp-long v4, v4, v6
+
+    if-nez v4, :cond_4b0
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - failed to update database entry (contacts)"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4b0
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_482
+
+    :cond_4b3
+    const/16 v19, 0x0
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - duplicate entries in the privacy.db"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4be
+    const/16 v19, 0x0
+
+    new-instance v4, Ljava/lang/Exception;
+
+    const-string/jumbo v5, "saveSettings - cursor is null, database access failed"
+
+    invoke-direct {v4, v5}, Ljava/lang/Exception;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_4c9
+    const-string/jumbo v4, "systemLogsSetting"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v18
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v4, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+
+    move-result v19
+
+    const-string v4, "ipTableProtectSetting"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v18
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v4, v1, v2}, Landroid/privacy/PrivacyPersistenceAdapter;->writeExternalSettings(Ljava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)Z
+
+    move-result v19
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->setTransactionSuccessful()V
+    :try_end_4e5
+    .catchall {:try_start_39f .. :try_end_4e5} :catchall_368
+    .catch Ljava/lang/Exception; {:try_start_39f .. :try_end_4e5} :catch_2e8
+
+    :try_start_4e5
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->endTransaction()V
+
+    if-eqz v12, :cond_4ed
+
+    invoke-interface {v12}, Landroid/database/Cursor;->close()V
+
+    :cond_4ed
+    sget-object v5, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    monitor-enter v5
+    :try_end_4f0
+    .catchall {:try_start_4e5 .. :try_end_4f0} :catchall_399
+
+    :try_start_4f0
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    sput-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    sget-object v4, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I
+
+    move-result v4
+
+    if-nez v4, :cond_513
+
+    if-eqz v3, :cond_513
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_513
+
+    invoke-virtual {v3}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+
+    :cond_513
+    monitor-exit v5
+
+    goto/16 :goto_31a
+
+    :catchall_516
+    move-exception v4
+
+    monitor-exit v5
+    :try_end_518
+    .catchall {:try_start_4f0 .. :try_end_518} :catchall_516
+
+    :try_start_518
+    throw v4
+    :try_end_519
+    .catchall {:try_start_518 .. :try_end_519} :catchall_399
+
+    :catchall_519
+    move-exception v4
+
+    :try_start_51a
+    monitor-exit v5
+    :try_end_51b
+    .catchall {:try_start_51a .. :try_end_51b} :catchall_519
+
+    :try_start_51b
+    throw v4
+    :try_end_51c
+    .catchall {:try_start_51b .. :try_end_51c} :catchall_399
+
+    :catchall_51c
+    move-exception v4
+
+    :try_start_51d
+    monitor-exit v5
+    :try_end_51e
+    .catchall {:try_start_51d .. :try_end_51e} :catchall_51c
+
+    :try_start_51e
+    throw v4
+    :try_end_51f
+    .catchall {:try_start_51e .. :try_end_51f} :catchall_399
+.end method
+
+.method public declared-synchronized setValue(Ljava/lang/String;Ljava/lang/String;)Z
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v3, "PrivacyPersistenceAdapter"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v5, "setValue - name "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " value "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Landroid/content/ContentValues;
+
+    invoke-direct {v2}, Landroid/content/ContentValues;-><init>()V
+
+    const-string/jumbo v3, "name"
+
+    invoke-virtual {v2, v3, p1}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string/jumbo v3, "value"
+
+    invoke-virtual {v2, v3, p2}, Landroid/content/ContentValues;->put(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-direct {p0}, Landroid/privacy/PrivacyPersistenceAdapter;->getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase;
+
+    move-result-object v0
+
+    const-string/jumbo v3, "map"
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v0, v3, v4, v2}, Landroid/database/sqlite/SQLiteDatabase;->replace(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J
+
+    move-result-wide v3
+
+    const-wide/16 v5, -0x1
+
+    cmp-long v3, v3, v5
+
+    if-eqz v3, :cond_5d
+
+    const/4 v1, 0x1
+
+    :goto_48
+    sget-object v3, Landroid/privacy/PrivacyPersistenceAdapter;->readingThreads:Ljava/lang/Integer;
+
+    invoke-virtual {v3}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    if-nez v3, :cond_5b
+
+    if-eqz v0, :cond_5b
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->isOpen()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_5b
+
+    invoke-virtual {v0}, Landroid/database/sqlite/SQLiteDatabase;->close()V
+    :try_end_5b
+    .catchall {:try_start_1 .. :try_end_5b} :catchall_5f
+
+    :cond_5b
+    monitor-exit p0
+
+    return v1
+
+    :cond_5d
+    const/4 v1, 0x0
+
+    goto :goto_48
+
+    :catchall_5f
+    move-exception v3
+
+    monitor-exit p0
+
+    throw v3
+.end method
